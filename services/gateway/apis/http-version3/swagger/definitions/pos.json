{
	"validator": {
		"type": "object",
		"required": [
			"name",
			"totalStake",
			"selfStake",
			"validatorWeight",
			"address",
			"lastGeneratedHeight",
			"status",
			"isBanned",
			"reportMisbehaviorHeights",
			"punishmentPeriods",
			"consecutiveMissedBlocks",
			"commission",
			"lastCommissionIncreaseHeight",
			"sharingCoefficients",
			"rank"
		],
		"properties": {
			"name": {
				"type": "string",
				"example": "genesis_84",
				"description": "Validator name."
			},
			"totalStake": {
				"type": "string",
				"example": "109000000000",
				"description": "Total stakes received in `posTokenID`."
			},
			"selfStake": {
				"type": "string",
				"example": "109000000000",
				"description": "Self stakes in `posTokenID`."
			},
			"validatorWeight": {
				"type": "string",
				"example": "109000000000",
				"description": "Validator weight. Minimum of (10 * selfStake) or totalStake."
			},
			"address": {
				"type": "string",
				"format": "address",
				"example": "lskdwsyfmcko6mcd357446yatromr9vzgu7eb8y99",
				"description": "The Lisk Address is the human-readable representation of a blockchain account.\nIt is 41 character long identifier that begins with `lsk`."
			},
			"publicKey": {
				"type": "string",
				"format": "publicKey",
				"example": "b1d6bc6c7edd0673f5fed0681b73de6eb70539c21278b300f07ade277e1962cd",
				"description": "The public key is derived from the private key of the owner of the account.\nIt can be used to validate that the private key belongs to the owner, but not provide access to the owner's private key."
			},
			"lastGeneratedHeight": {
				"type": "integer",
				"example": 0,
				"description": "Height of the last generated block. Set to `0` by default."
			},
			"status": {
				"type": "string",
				"example": "active",
				"description": "Validator status. Can be one of: active, standby, banned, punished, ineligible."
			},
			"isBanned": {
				"type": "boolean",
				"example": false,
				"description": "A boolean flag indicating if the validator is banned."
			},
			"reportMisbehaviorHeights": {
				"type": "array",
				"items": {
					"type": "number",
					"example": 123
				}
			},
			"punishmentPeriods": {
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"start": {
							"type": "integer",
							"example": 123,
							"description": "Punishment starting height. Corresponds to the entries in pomHeights."
						},
						"end": {
							"type": "integer",
							"example": 260123,
							"description": "The corresponding punishment end height."
						}
					}
				}
			},
			"consecutiveMissedBlocks": {
				"type": "integer",
				"example": 0,
				"description": "Number of consecutive missed blocks."
			},
			"commission": {
				"type": "number",
				"example": 100000,
				"description": "The reward commission. The percentage is obtained by dividing this value by 100, i.e., a value of 10000 corresponds to 100%. It is set to 10000 on the Lisk Mainchain during the migration."
			},
			"lastCommissionIncreaseHeight": {
				"type": "number",
				"example": 0,
				"description": "The block height at which the validator last modified their commission."
			},
			"sharingCoefficients": {
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"tokenID": {
							"type": "string",
							"example": "0000000000000000",
							"description": "TokenID."
						},
						"coefficient": {
							"type": "string",
							"example": "",
							"description": "Sharing coefficient for the specified TokenID for all the outgoing stakes."
						}
					}
				}
			},
			"rank": {
				"type": "integer",
				"example": 93,
				"description": "Validator rank."
			},
			"generatedBlocks": {
				"type": "integer",
				"example": 1000,
				"description": "Number of blocks generated by the validator."
			},
			"totalCommission": {
				"type": "string",
				"example": "100000000000",
				"description": "Total rewards earned by the validator as commission for generating blocks."
			},
			"totalSelfStakeRewards": {
				"type": "string",
				"example": "0",
				"description": "Total rewards earned by the validator as a staker based on their self-stake when generating blocks."
			},
			"earnedRewards": {
				"type": "string",
				"example": "100000000000",
				"description": "Total rewards earned by the validator."
			}
		}
	},
	"validatorsWithEnvelope": {
		"type": "object",
		"required": ["data", "meta"],
		"properties": {
			"data": {
				"description": "List of validators.",
				"type": "array",
				"items": {
					"$ref": "#/definitions/validator"
				}
			},
			"meta": {
				"$ref": "#/definitions/pagination"
			}
		}
	},
	"unlock": {
		"type": "object",
		"required": ["address", "publicKey", "name"],
		"properties": {
			"address": {
				"type": "string",
				"format": "address",
				"example": "lskdwsyfmcko6mcd357446yatromr9vzgu7eb8y99",
				"description": "The Lisk Address is the human-readable representation of a blockchain account.\nIt is 41 character long identifier that begins with `lsk`."
			},
			"publicKey": {
				"type": "string",
				"format": "publicKey",
				"example": "b1d6bc6c7edd0673f5fed0681b73de6eb70539c21278b300f07ade277e1962cd",
				"description": "The public key is derived from the private key of the owner of the account.\nIt can be used to validate that the private key belongs to the owner, but not provide access to the owner's private key."
			},
			"name": {
				"type": "string",
				"example": "genesis_84",
				"description": "Name of auth account."
			},
			"unlocking": {
				"type": "array",
				"required": ["validatorAddress", "amount", "unvoteHeight"],
				"items": {
					"type": "object",
					"properties": {
						"validatorAddress": {
							"type": "string",
							"example": "lsk24cd35u4jdq8szo3pnsqe5dsxwrnazyqqqg5eu"
						},
						"amount": {
							"type": "string",
							"example": "10000"
						},
						"unvoteHeight": {
							"type": "object",
							"required": ["start", "end"],
							"properties": {
								"start": {
									"type": "integer",
									"example": 30
								},
								"end": {
									"type": "integer",
									"example": 300
								}
							}
						}
					}
				}
			}
		}
	},
	"unlocksWithEnvelope": {
		"type": "object",
		"required": ["data", "meta"],
		"properties": {
			"data": {
				"description": "List of validator unlocks.",
				"type": "array",
				"items": {
					"$ref": "#/definitions/unlock"
				}
			},
			"meta": {
				"$ref": "#/definitions/pagination"
			}
		}
	},
	"posUnlock": {
		"type": "object",
		"required": ["address", "publicKey", "pendingUnlocks"],
		"properties": {
			"address": {
				"type": "string",
				"format": "address",
				"example": "lskdwsyfmcko6mcd357446yatromr9vzgu7eb8y99",
				"description": "Address of the staker. The Lisk Address is the human-readable representation of a blockchain account.\nIt is 41 character long identifier that begins with `lsk`."
			},
			"publicKey": {
				"type": "string",
				"format": "publicKey",
				"example": "b1d6bc6c7edd0673f5fed0681b73de6eb70539c21278b300f07ade277e1962cd",
				"description": "Public key of the staker. The public key is derived from the private key of the owner of the account.\nIt can be used to validate that the private key belongs to the owner, but not provide access to the owner's private key."
			},
			"name": {
				"type": "string",
				"example": "genesis_84",
				"description": "Name of the staker."
			},
			"pendingUnlocks": {
				"type": "array",
				"items": {
					"type": "object",
					"required": [
						"validatorAddress",
						"amount",
						"tokenID",
						"unstakeHeight",
						"expectedUnlockableHeight",
						"expectedUnlockTime",
						"isLocked"
					],
					"properties": {
						"validatorAddress": {
							"type": "string",
							"example": "lsk24cd35u4jdq8szo3pnsqe5dsxwrnazyqqqg5eu",
							"description": "Address of the validator against which the stake was made."
						},
						"amount": {
							"type": "string",
							"example": "1000000000",
							"description": "The staked amount of tokens against the validator."
						},
						"tokenID": {
							"type": "string",
							"example": "0000000000000000",
							"description": "The universal identifier for the token within the Lisk ecosystem for PoS module."
						},
						"unstakeHeight": {
							"type": "integer",
							"example": 10000,
							"description": "The block height at which the corresponding amount was unstaked."
						},
						"expectedUnlockableHeight": {
							"type": "integer",
							"example": 270000,
							"description": "The block height at which the corresponding unstaked (locked) amount is available to be unlocked."
						},
						"expectedUnlockTime": {
							"type": "integer",
							"example": 1556100060,
							"description": "The timestamp at which the corresponding unstaked (locked) amount is available to be unlocked."
						},
						"isLocked": {
							"type": "boolean",
							"example": true,
							"description": "A boolean flag indicating if the corresponding (previously) un-staked amount is available to be unlocked. When `isLocked: false`, the amount can be unlocked with a `pos:unlock` transaction."
						}
					}
				}
			}
		}
	},
	"posUnlocksWithEnvelope": {
		"type": "object",
		"required": ["data", "meta"],
		"properties": {
			"data": {
				"description": "Array of PoS unlocks data.",
				"$ref": "#/definitions/posUnlock"
			},
			"meta": {
				"$ref": "#/definitions/pagination"
			}
		}
	},
	"posStake": {
		"type": "object",
		"required": ["address", "amount", "name"],
		"properties": {
			"address": {
				"type": "string",
				"format": "address",
				"example": "lskdwsyfmcko6mcd357446yatromr9vzgu7eb8y99",
				"description": "Address of the validator."
			},
			"amount": {
				"type": "string",
				"example": "10815000000000",
				"description": "Amount staked."
			},
			"name": {
				"type": "string",
				"format": "username",
				"example": "liskhq",
				"description": "Name of the validator against whom the stake was made."
			}
		}
	},
	"posStakesMeta": {
		"type": "object",
		"required": ["staker", "count"],
		"properties": {
			"staker": {
				"type": "object",
				"properties": {
					"address": {
						"type": "string",
						"format": "address",
						"example": "lskdwsyfmcko6mcd357446yatromr9vzgu7eb8y99",
						"description": "Address of the queried staker. The Lisk Address is the human-readable representation of a blockchain account.\nIt is 41 character long identifier that begins with `lsk`."
					},
					"publicKey": {
						"type": "string",
						"format": "publicKey",
						"example": "b1d6bc6c7edd0673f5fed0681b73de6eb70539c21278b300f07ade277e1962cd",
						"description": "Public key of the queried staker. The public key is derived from the private key of the owner of the account.\nIt can be used to validate that the private key belongs to the owner, but not provide access to the owner's private key."
					},
					"name": {
						"type": "string",
						"example": "genesis_84",
						"description": "Name of the queried staker. Available only when registered as a validator."
					}
				}
			},
			"count": {
				"type": "integer",
				"example": 10,
				"minimum": 0,
				"maximum": 10,
				"description": "Number of items returned in the request."
			}
		}
	},
	"posStakesWithEnvelope": {
		"type": "object",
		"required": ["data", "meta"],
		"properties": {
			"data": {
				"description": "List of stakes for the queried staker.",
				"type": "object",
				"properties": {
					"stakes": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/posStake"
						}
					}
				}
			},
			"meta": {
				"$ref": "#/definitions/posStakesMeta"
			}
		}
	},
	"posStaker": {
		"type": "object",
		"required": ["address", "amount"],
		"properties": {
			"address": {
				"type": "string",
				"format": "address",
				"example": "lskdwsyfmcko6mcd357446yatromr9vzgu7eb8y99",
				"description": "Address of the staker."
			},
			"amount": {
				"type": "string",
				"example": "10815000000000",
				"description": "Amount staked."
			},
			"name": {
				"type": "string",
				"format": "username",
				"example": "liskhq",
				"description": "Name of the staker. Available only when registered as a validator."
			}
		}
	},
	"posStakersMeta": {
		"type": "object",
		"required": ["validator", "count", "offset", "total"],
		"properties": {
			"validator": {
				"type": "object",
				"required": ["address", "publicKey", "name"],
				"properties": {
					"address": {
						"type": "string",
						"format": "address",
						"example": "lskdwsyfmcko6mcd357446yatromr9vzgu7eb8y99",
						"description": "Address of the queried validator. The Lisk Address is the human-readable representation of a blockchain account.\nIt is 41 character long identifier that begins with `lsk`."
					},
					"publicKey": {
						"type": "string",
						"format": "publicKey",
						"example": "b1d6bc6c7edd0673f5fed0681b73de6eb70539c21278b300f07ade277e1962cd",
						"description": "Public key of the queried validator. The public key is derived from the private key of the owner of the account.\nIt can be used to validate that the private key belongs to the owner, but not provide access to the owner's private key."
					},
					"name": {
						"type": "string",
						"example": "genesis_84",
						"description": "Name of the queried validator."
					}
				}
			},
			"count": {
				"type": "integer",
				"example": 100,
				"minimum": 0,
				"description": "Number of items returned in the request."
			},
			"offset": {
				"type": "integer",
				"example": 25,
				"minimum": 0,
				"description": "Defines how many items are skipped."
			},
			"total": {
				"type": "integer",
				"example": 43749,
				"minimum": 0,
				"description": "Total number of items in the database."
			}
		}
	},
	"posStakersWithEnvelope": {
		"type": "object",
		"required": ["data", "meta"],
		"properties": {
			"data": {
				"description": "List of stakers for the queried validator.",
				"type": "object",
				"required": ["stakers"],
				"properties": {
					"stakers": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/posStaker"
						}
					}
				}
			},
			"meta": {
				"$ref": "#/definitions/posStakersMeta"
			}
		}
	},
	"posConstantsWithEnvelope": {
		"type": "object",
		"required": ["data", "meta"],
		"properties": {
			"data": {
				"description": "PoS module constants.",
				"type": "object",
				"required": [
					"factorSelfStakes",
					"maxLengthName",
					"maxNumberSentStakes",
					"maxNumberPendingUnlocks",
					"failSafeMissedBlocks",
					"failSafeInactiveWindow",
					"punishmentWindowStaking",
					"punishmentWindowSelfStaking",
					"roundLength",
					"minWeightStandby",
					"numberActiveValidators",
					"numberStandbyValidators",
					"posTokenID",
					"maxBFTWeightCap",
					"commissionIncreasePeriod",
					"maxCommissionIncreaseRate",
					"useInvalidBLSKey",
					"baseStakeAmount",
					"lockingPeriodStaking",
					"lockingPeriodSelfStaking",
					"reportMisbehaviorReward",
					"reportMisbehaviorLimitBanned",
					"weightScaleFactor",
					"extraCommandFees"
				],
				"properties": {
					"factorSelfStakes": {
						"type": "integer",
						"example": 10,
						"description": "The factor multiplying the self-votes of a delegate for the delegate weight computation. It is used to set the ceiling for the delegate weight."
					},
					"maxLengthName": {
						"type": "integer",
						"example": 20,
						"description": "The maximum number of characters allowed for a delegate name."
					},
					"maxNumberSentStakes": {
						"type": "integer",
						"example": 10,
						"description": "The maximum number of validators any staker can stake for."
					},
					"maxNumberPendingUnlocks": {
						"type": "integer",
						"example": 20,
						"description": "The maximum number of pending unlocks allowed for a staker."
					},
					"failSafeMissedBlocks": {
						"type": "integer",
						"example": 50,
						"description": "The number of consecutive missed blocks used in the fail-safe banning mechanism."
					},
					"failSafeInactiveWindow": {
						"type": "integer",
						"example": 260000,
						"description": "The length of the inactivity window used in the fail-safe banning mechanism."
					},
					"punishmentWindowStaking": {
						"type": "integer",
						"example": 241920,
						"description": "The punishment period for regular stakes, i.e., how many blocks after misbehavior report stakers can unlock tokens unstaked from a punished validator."
					},
					"punishmentWindowSelfStaking": {
						"type": "integer",
						"example": 725760,
						"description": "The punishment period for self-stakes, i.e., how many blocks after misbehavior report punished validators can unlock their self-unstaked tokens."
					},
					"roundLength": {
						"type": "integer",
						"example": 10,
						"description": "The number of blocks in a round and is the sum total of the active and the standby delegates."
					},
					"minWeightStandby": {
						"type": "string",
						"example": "100000000000",
						"description": "The minimum delegate weight required to be eligible as a standby delegate."
					},
					"numberActiveValidators": {
						"type": "integer",
						"example": 101,
						"description": "The number of active validators in a round."
					},
					"numberStandbyValidators": {
						"type": "integer",
						"example": 2,
						"description": "The number of standby validators in a round."
					},
					"posTokenID": {
						"type": "string",
						"example": "0000000000000000",
						"description": "The universal identifier for the token within the Lisk ecosystem for PoS module."
					},
					"maxBFTWeightCap": {
						"type": "number",
						"example": 500,
						"description": ""
					},
					"commissionIncreasePeriod": {
						"type": "number",
						"example": 260000,
						"description": "Determines how frequently (after how many blocks) a validator can increase their commission.  It is set to 260000 blocks on the Lisk Mainchain."
					},
					"maxCommissionIncreaseRate": {
						"type": "number",
						"example": 500,
						"description": "Determines the maximum allowed increase on the commission per transaction. It is set to 5% on the Lisk Mainchain."
					},
					"useInvalidBLSKey": {
						"type": "boolean",
						"example": false,
						"description": "This value determines if the function registerValidatorKeys or registerValidatorWithoutBLSKey from the validators module should be used when registering validators listed in a genesis block."
					},
					"baseStakeAmount": {
						"type": "string",
						"example": "1000000000",
						"description": "The minimum staking amount. All staked amounts should be multiples of this value."
					},
					"lockingPeriodStaking": {
						"type": "number",
						"example": 26000,
						"description": "The locking period for regular staked tokens, measured in number of blocks."
					},
					"lockingPeriodSelfStaking": {
						"type": "number",
						"example": 260000,
						"description": "The locking period for self-staked tokens."
					},
					"reportMisbehaviorReward": {
						"type": "string",
						"example": "100000000",
						"description": "The reward for a sender of a report misbehavior transaction."
					},
					"reportMisbehaviorLimitBanned": {
						"type": "number",
						"example": 5,
						"description": "The number of report misbehavior transactions against a validator for getting banned."
					},
					"weightScaleFactor": {
						"type": "string",
						"example": "100000000000",
						"description": "Determines the factor by which BFT weights are divided."
					},
					"extraCommandFees": {
						"description": "Extra fees associated (beyond the usual transaction fees) for the listed commands.",
						"type": "object",
						"required": ["validatorRegistrationFee"],
						"properties": {
							"validatorRegistrationFee": {
								"type": "string",
								"example": "1000000000",
								"description": "The extra fee to be supplied for a validator registration transaction."
							}
						}
					}
				}
			},
			"meta": {
				"type": "object"
			}
		}
	},
	"posRewardsLockedWithEnvelope": {
		"type": "object",
		"required": ["data", "meta"],
		"properties": {
			"data": {
				"description": "PoS Locked Rewards.",
				"type": "array",
				"items": {
					"type": "object",
					"required": ["tokenID", "reward"],
					"properties": {
						"tokenID": {
							"type": "string",
							"example": "0000000000000000",
							"description": "The universal identifier for the token within the Lisk ecosystem used for rewards."
						},
						"reward": {
							"type": "string",
							"example": "109000000000",
							"description": "The amount of rewards currently locked by the PoS module in terms of the specified tokenID."
						}
					}
				}
			},
			"meta": {
				"$ref": "#/definitions/pagination"
			}
		}
	},
	"posClaimableRewardsWithEnvelope": {
		"type": "object",
		"required": ["data", "meta"],
		"properties": {
			"data": {
				"description": "PoS claimable Rewards.",
				"type": "array",
				"items": {
					"type": "object",
					"required": ["tokenID", "reward"],
					"properties": {
						"tokenID": {
							"type": "string",
							"example": "0000000000000000",
							"description": "The universal identifier for the token within the Lisk ecosystem used for rewards."
						},
						"reward": {
							"type": "string",
							"example": "109000000000",
							"description": "The amount of currently claimable rewards previously locked by the PoS module for the queried address, publicKey or validator name."
						}
					}
				}
			},
			"meta": {
				"$ref": "#/definitions/pagination"
			}
		}
	}
}
