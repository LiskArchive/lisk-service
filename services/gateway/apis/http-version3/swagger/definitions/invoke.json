{
	"invokeWithEnvelope": {
		"type": "object",
		"required": ["data", "meta"],
		"properties": {
			"data": {
				"type": "object",
				"properties": {
					"header": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string",
								"format": "id",
								"minLength": 64,
								"maxLength": 64,
								"example": "01967dba384998026fe028119bd099ecf073c05c045381500a93d1a7c7307e5b",
								"description": "Unique identifier of the block.\nDerived from the block signature."
							},
							"version": {
								"type": "integer",
								"example": 0,
								"minimum": 0,
								"description": "Lisk protocol version to which this block adheres to."
							},
							"height": {
								"type": "integer",
								"example": 8344448,
								"minimum": 0,
								"description": "Height of the network, when the block got forged.\nThe height of the networks represents the number of blocks, that have been forged on the network since Genesis Block."
							},
							"timestamp": {
								"type": "integer",
								"example": 85944650,
								"description": "UNIX Timestamp"
							},
							"previousBlockId": {
								"type": "string",
								"format": "id",
								"example": "827080df7829cd2757501a85f80a0767fcb40615304b701c2890dbbaf214bb89",
								"description": "ID of the parent block."
							},
							"generatorAddress": {
								"type": "string",
								"example": "cd56330913e4517f35cf689e849f5c208ed48b8e",
								"description": "Binary address of the block generator."
							},
							"transactionRoot": {
								"type": "string",
								"format": "hex",
								"example": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
								"description": "Merkle root of the block payload.\nThe block payload comprises the transactions contained within the block."
							},
							"assetsRoot": {
								"type": "string",
								"example": "6e904b2f678eb3b6c3042acb188a607d903d441d61508d047fe36b3c982995c8",
								"description": "Merkle root of the block assets array."
							},
							"stateRoot": {
								"type": "string",
								"example": "95d9b1773b78034b8df9ac741c903b881da761d8ba002a939de28a4b86982c04",
								"description": "The root of the Sparse Merkle Tree that is computed from the state of the blockchain."
							},
							"maxHeightGenerated": {
								"type": "integer",
								"example": 559421
							},
							"maxHeightPrevoted": {
								"type": "integer",
								"example": 559434
							},
							"validatorsHash": {
								"type": "string",
								"example": "ad0076aa444f6cda608bb163c3bd77d9bf172f1d2803d53095bc0f277db6bcb3",
								"description": "Hash to authenticate the active set of validators."
							},
							"aggregateCommit": {
								"type": "object",
								"properties": {
									"height": {
										"type": "string",
										"example": "166"
									},
									"aggregationBits": {
										"type": "string",
										"example": "ffffffffffffffffffffffff1f"
									},
									"certificateSignature": {
										"type": "string",
										"example": "a7db952f87db29718c40afca9a9fb2f6b605f8588c1c99e41e92f26ec005e6d14327c33051fa383fe903b7040d16c7441570167a73d9468aa16a6720c765b3f22aeca42102c45b4616fd7543d7a0649e0fa934e0de1973486eede9d56f014f9f"
									}
								}
							},
							"signature": {
								"type": "string",
								"format": "signature",
								"example": "a3733254aad600fa787d6223002278c3400be5e8ed4763ae27f9a15b80e20c22ac9259dc926f4f4cabdf0e4f8cec49308fa8296d71c288f56b9d1e11dfe81e07",
								"description": "Derived from a SHA-256 hash of the block header,\nthat is signed by the private key of the validator who forged the block."
							}
						}
					},
					"assets": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/assets"
						}
					},
					"transactions": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/transactions"
						}
					}
				}
			},
			"meta": {
				"type": "object",
				"properties": {
					"endpoint": {
						"type": "string",
						"example": "chain_getBlockByHeight"
					},
					"params": {
						"type": "object",
						"properties": {
							"height": {
								"type": "integer",
								"example": 10
							}
						}
					}
				}
			}
		}
	},
	"assets": {
		"type": "object",
		"properties": {
			"module": {
				"type": "string",
				"example": "token",
				"description": "Module the transaction is associated with."
			},
			"data": {
				"type": "string",
				"example": "0a14e135813f51103e7645ed87a0562a823d2fd48bc612207eef331c6d58f3962f5fb35b13f780f0ee7d93fbc37a3e9f4ccbdc6d1551db801a303629827aaa0836111137215708fd2007e9221ca1d56b29b98d8e9747ec3243c0549dc2091515d2bdd72fb28acef50160"
			}
		}
	},
	"transactions": {
		"type": "object",
		"properties": {
			"module": {
				"type": "string",
				"example": "token",
				"description": "Module the transaction is associated with."
			},
			"command": {
				"type": "string",
				"example": "transfer",
				"description": "Command the transaction is associated with."
			},
			"nonce": {
				"type": "string",
				"example": "0"
			},
			"fee": {
				"type": "string",
				"example": "1000000",
				"description": "Transaction fee associated with this transaction."
			},
			"senderPublicKey": {
				"type": "string",
				"format": "senderPublicKey",
				"example": "b1d6bc6c7edd0673f5fed0681b73de6eb70539c21278b300f07ade277e1962cd",
				"description": "The public key is derived from the private key of the owner of the account.\nIt can be used to validate that the private key belongs to the owner, but not provide access to the owner's private key."
			},
			"params": {
				"type": "object",
				"properties": {
					"amount": {
						"type": "string",
						"example": "100003490",
						"description": "Amount of Lisk (in Beddows) to be transferred in this transaction."
					},
					"recipientAddress": {
						"type": "string",
						"example": "0f16f2cd587679d5fd686584b5018d4f844348ac",
						"description": "Lisk base32 address."
					},
					"data": {
						"type": "string",
						"example": "test"
					}
				}
			}
		}
	},
	"invokeParamsEnvelope": {
		"type": "object",
		"properties": {
			"endpoint": {
				"type": "string",
				"example": "chain_getBlockByHeight"
			},
			"params": {
				"type": "object",
				"properties": {
					"height": {
						"type": "integer",
						"example": 10
					}
				}
			}
		}
	}
}
