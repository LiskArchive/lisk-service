{
	"TransactionsStatisticsWithEnvelope": {
		"type": "object",
		"required": ["data", "meta"],
		"properties": {
			"data": {
				"$ref": "#/definitions/TransactionsStatistics"
			},
			"meta": {
				"$ref": "#/definitions/TransactionStatisticsMeta"
			}
		}
	},
	"TransactionStatisticsMeta": {
		"type": "object",
		"required": ["count", "offset", "total", "duration", "info"],
		"properties": {
			"count": {
				"type": "integer",
				"example": 10,
				"minimum": 0,
				"description": "Number of timeline items per tokenID returned in the response."
			},
			"offset": {
				"type": "integer",
				"example": 10,
				"minimum": 0,
				"description": "Number of items skipped in the response."
			},
			"total": {
				"type": "integer",
				"example": 100,
				"minimum": 0,
				"description": "Total number of available timeline items per tokenID matching the request query."
			},
			"duration": {
				"type": "object",
				"properties": {
					"format": {
						"type": "string",
						"example": "YYYY-MM",
						"description": "Date/month format for the stated aggregation interval ('from' & 'to')."
					},
					"from": {
						"type": "string",
						"example": "2021-12",
						"description": "Date/month representing the beginning of the aggregation interval."
					},
					"to": {
						"type": "string",
						"example": "2022-09",
						"description": "Date/month representing the ending of the aggregation interval."
					}
				}
			}
		}
	},
	"TransactionsStatistics": {
		"type": "object",
		"description": "Transactions statistics",
		"required": ["distributionByType", "distributionByAmount", "timeline"],
		"properties": {
			"distributionByType": {
				"type": "object",
				"description": "Count of transactions segregated by transaction type (i.e. moduleCommand) for the stated time interval in the response 'meta'.",
				"properties": {
					"token:transfer": {
						"type": "integer",
						"example": 1
					}
				}
			},
			"distributionByAmount": {
				"type": "object",
				"description": "Count of Token Transfer transactions segregated by amount range for the stated time interval in the response 'meta'.",
				"properties": {
					"0000000100000000": {
						"type": "object",
						"properties": {
							"1_10": {
								"type": "integer",
								"example": 1
							}
						}
					}
				}
			},
			"timeline": {
				"type": "object",
				"properties": {
					"0000000100000000": {
						"type": "array",
						"items": {
							"type": "object",
							"required": ["timestamp", "date", "transactionCount", "volume"],
							"properties": {
								"timestamp": {
									"type": "integer",
									"description": "UNIX timestamp representing the beginning of the aggregation interval.",
									"example": 1556100060
								},
								"date": {
									"type": "string",
									"description": "Date representing the beginning of the aggregation interval.",
									"example": "2019-11-27"
								},
								"transactionCount": {
									"type": "integer",
									"description": "Count of all transactions in the given time span.",
									"example": "14447177193385"
								},
								"volume": {
									"type": "integer",
									"description": "Sum of all transaction amounts and fees sent in the given time span (in Beddows).",
									"example": 14447177193385
								}
							}
						}
					}
				}
			}
		}
	},
	"Transaction": {
		"type": "object",
		"required": [
			"id",
			"moduleCommand",
			"fee",
			"minFee",
			"size",
			"nonce",
			"sender",
			"params",
			"executionStatus"
		],
		"properties": {
			"id": {
				"type": "string",
				"format": "id",
				"example": "f9593f101c4acafc3ede650ab4c10fa2ecb59b225813eddbbb17b47e96932e9b",
				"minLength": 64,
				"maxLength": 64,
				"description": "Unique identifier of the transaction.\nDerived from the transaction signature."
			},
			"moduleCommand": {
				"type": "string",
				"example": "token:transfer",
				"description": "Combination of transaction moduleName:commandName."
			},
			"nonce": {
				"type": "string",
				"example": "0"
			},
			"fee": {
				"type": "string",
				"example": "1000000",
				"description": "Transaction fee."
			},
			"minFee": {
				"type": "string",
				"example": "75000",
				"description": "Minimum fee for the transaction."
			},
			"size": {
				"type": "integer",
				"example": 165,
				"minimum": 1,
				"description": "Transaction size in bytes."
			},
			"block": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "id",
						"minLength": 64,
						"maxLength": 64,
						"example": "01967dba384998026fe028119bd099ecf073c05c045381500a93d1a7c7307e5b",
						"description": "Unique identifier of the block.\nDerived from the block signature."
					},
					"height": {
						"type": "integer",
						"minimum": 1,
						"example": 8350681,
						"description": "The height of the network, at the moment where this transaction was included in the blockchain."
					},
					"timestamp": {
						"type": "integer",
						"example": 1613323667,
						"description": "UNIX Timestamp"
					},
					"isFinal": {
						"type": "boolean",
						"example": true
					}
				}
			},
			"sender": {
				"type": "object",
				"properties": {
					"address": {
						"type": "string",
						"format": "address",
						"example": "lskdwsyfmcko6mcd357446yatromr9vzgu7eb8y99",
						"description": "The Lisk Address is the human-readable representation of a blockchain account.\nIt is 41 character long identifier that begins with `lsk`."
					},
					"publicKey": {
						"type": "string",
						"format": "publicKey",
						"example": "b1d6bc6c7edd0673f5fed0681b73de6eb70539c21278b300f07ade277e1962cd",
						"description": "The public key is derived from the private key of the owner of the account.\nIt can be used to validate that the private key belongs to the owner, but not provide access to the owner's private key."
					},
					"name": {
						"type": "string",
						"example": "genesis_84",
						"description": "Delegate name"
					}
				}
			},
			"params": {
				"type": "object",
				"properties": {
					"amount": {
						"type": "string",
						"example": "100003490",
						"description": "Amount of Lisk (in Beddows) to be transferred in this transaction."
					},
					"recipientAddress": {
						"type": "string",
						"example": "lskz4upsnrwk75wmfurf6kbxsne2nkjqd3yzwdaup",
						"description": "The Lisk Address is the human-readable representation of a blockchain account.\nIt is a 41 characters long identifier that begins with `lsk`."
					},
					"tokenID": {
						"type": "string",
						"example": "0000000000000000",
						"description": "Unique token identifier."
					},
					"data": {
						"type": "string",
						"example": "test"
					}
				}
			},
			"executionStatus": {
				"type": "string",
				"example": "successful",
				"description": "Execution status of the transaction.\nAccepted values: pending, successful, failed."
			},
			"index": {
				"type": "integer",
				"example": 0,
				"description": "Transaction index (zero-based) within the block payload."
			},
			"meta": {
				"type": "object",
				"properties": {
					"recipient": {
						"properties": {
							"address": {
								"type": "string",
								"format": "address",
								"example": "lskdwsyfmcko6mcd357446yatromr9vzgu7eb8y99",
								"description": "The Lisk Address is the human-readable representation of a blockchain account.\nIt is 41 character long identifier that begins with `lsk`."
							},
							"publicKey": {
								"type": "string",
								"format": "publicKey",
								"example": "b1d6bc6c7edd0673f5fed0681b73de6eb70539c21278b300f07ade277e1962cd",
								"description": "The public key is derived from the private key of the owner of the account.\nIt can be used to validate that the private key belongs to the owner, but not provide access to the owner's private key."
							},
							"name": {
								"type": "string",
								"example": "genesis_84",
								"description": "Validator name."
							}
						}
					}
				}
			}
		}
	},
	"TransactionsWithEnvelope": {
		"type": "object",
		"required": ["data", "meta"],
		"properties": {
			"data": {
				"description": "List of transactions",
				"type": "array",
				"items": {
					"$ref": "#/definitions/Transaction"
				}
			},
			"meta": {
				"$ref": "#/definitions/pagination"
			}
		}
	},
	"postTransactionWithEnvelope": {
		"type": "object",
		"properties": {
			"message": {
				"type": "string",
				"example": "Transaction payload was successfully passed to the network node."
			},
			"transactionID": {
				"type": "string",
				"example": "bfd3521aeddd586f43931b6972b5771e9919e18f2cc91e940a15eacb588ecc6c",
				"description": "Transaction ID"
			}
		}
	},
	"badRequestEnvelope": {
		"type": "object",
		"properties": {
			"error": {
				"type": "boolean",
				"example": true
			},
			"message": {
				"type": "string",
				"example": "Transaction payload was rejected by the network node."
			}
		}
	},
	"serverErrorEnvelope": {
		"type": "object",
		"properties": {
			"error": {
				"type": "boolean",
				"example": true
			},
			"message": {
				"type": "string",
				"example": "Unable to reach a network node."
			}
		}
	},
	"transactionParamEnvelope": {
		"type": "object",
		"properties": {
			"transaction": {
				"type": "string",
				"example": "0a040000000212040000000018002080c2d72f2a2044c3cb523c0a069e3f2dcb2d5994b6ba8ff9f73cac9ae746922aac4bc22f95b132310a0800000001000000001080c2d72f1a14632228a3e6a67ac6892de2eb4f60abe2e3bc42a1220a73656e6420746f6b656e3a40964d81e28727e6567b0fcd8a7fcf0a03f401cadbc1c16b9a7f300a52c372022b51a4553865199af34b5f73765f970704fc443d2a6dd510a26748905c306e530b",
				"description": "Binary payload"
			}
		}
	},
	"dryrunTransactionParamEnvelope": {
		"type": "object",
		"properties": {
			"skipDecode": {
				"type": "boolean",
				"description": "A boolean indicator to skip decoding event data.",
				"example": "false",
				"default": false
			},
			"skipVerify": {
				"type": "boolean",
				"description": "A boolean indicator to skip transaction verification.",
				"example": "false",
				"default": false
			},
			"strict": {
				"type": "boolean",
				"description": "A boolean indicator to enable strict mode. By default, it is set to false which skips the nonce and signature checks.",
				"example": "false",
				"default": false
			},
			"transaction": {
				"type": "object",
				"description": "Binary payload or the transaction object.",
				"properties": {
					"module": {
						"type": "string",
						"example": "token",
						"description": "Name of the blockchain module associated with the transaction."
					},
					"command": {
						"type": "string",
						"example": "transfer",
						"description": "Specific command name in the module to be executed."
					},
					"fee": {
						"type": "string",
						"example": "100000000",
						"description": "Transaction fee."
					},
					"nonce": {
						"type": "string",
						"example": "0"
					},
					"senderPublicKey": {
						"type": "string",
						"format": "senderPublicKey",
						"example": "a3f96c50d0446220ef2f98240898515cbba8155730679ca35326d98dcfb680f0",
						"description": "The public key is derived from the private key of the owner of the account.\nIt can be used to validate that the private key belongs to the owner, but not provide access to the owner's private key."
					},
					"signatures": {
						"type": "string",
						"example": [
							"48425002226745847e155cf5480478c2336a43bb178439e9058cc2b50e26335cf7c8360b6c6a49793d7ae8d087bc746cab9618655e6a0adba4694cce2015b50f"
						],
						"description": "An array representing signature(s) of the transaction sender."
					},
					"params": {
						"type": "object",
						"properties": {
							"recipientAddress": {
								"type": "string",
								"example": "lskz4upsnrwk75wmfurf6kbxsne2nkjqd3yzwdaup",
								"description": "The Lisk Address is the human-readable representation of a blockchain account.\nIt is a 41 characters long identifier that begins with `lsk`."
							},
							"amount": {
								"type": "string",
								"example": "10000000000",
								"description": "Amount of Lisk (in Beddows) to be transferred in this transaction."
							},
							"tokenID": {
								"type": "string",
								"example": "0000000000000000",
								"description": "Unique token identifier."
							},
							"data": {
								"type": "string",
								"example": "Token transfer tx",
								"description": "Transaction data."
							}
						}
					}
				}
			}
		}
	},
	"dryTransactionWithEnvelope": {
		"type": "object",
		"required": ["data", "meta"],
		"properties": {
			"data": {
				"type": "object",
				"required": ["result", "events"],
				"properties": {
					"result": {
						"type": "integer",
						"example": 1
					},
					"status": {
						"type": "string",
						"example": "valid",
						"description": "Transaction verification status."
					},
					"events": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"data": {
									"type": "object",
									"properties": {
										"senderAddress": {
											"type": "string",
											"example": "lskdwsyfmcko6mcd357446yatromr9vzgu7eb8y99",
											"description": "The Lisk Address is the human-readable representation of a blockchain account.\nIt is a 41 characters long identifier that begins with `lsk`."
										},
										"tokenID": {
											"type": "string",
											"example": "0000000000000000",
											"description": "Unique token identifier."
										},
										"amount": {
											"type": "string",
											"example": "100003490",
											"description": "Amount of tokens transferred in this transaction. The type of token can be identified by the 'tokenID' property."
										},
										"recipientAddress": {
											"type": "string",
											"example": "lskdwsyfmcko6mcd357446yatromr9vzgu7eb8y99",
											"description": "The Lisk Address is the human-readable representation of a blockchain account.\nIt is a 41 characters long identifier that begins with `lsk`."
										},
										"result": {
											"type": "integer",
											"example": 1
										}
									}
								},
								"index": {
									"type": "integer",
									"example": 0
								},
								"module": {
									"type": "string",
									"example": "token"
								},
								"name": {
									"type": "string",
									"example": "transfer"
								},
								"topics": {
									"type": "array",
									"items": {
										"type": "string"
									},
									"example": [
										"86afcdd640846bf41525481938653ee942be3fac1ecbcff08e98f9aeda3a9583",
										"lskdwsyfmcko6mcd357446yatromr9vzgu7eb8y99",
										"0000000000000000",
										"lskdwsyfmcko6mcd357446yatromr9vzgu7eb8y99"
									]
								},
								"height": {
									"type": "number",
									"example": 10
								},
								"id": {
									"type": "string",
									"format": "id",
									"example": "f9593f101c4acafc3ede650ab4c10fa2ecb59b225813eddbbb17b47e96932e9b",
									"minLength": 64,
									"maxLength": 64,
									"description": "Unique identifier of the transaction.\nDerived from the transaction signature."
								}
							}
						}
					},
					"errorMessage": {
						"type": "string",
						"example": "Failed to validate signature '6de57983d8b61a9f7a303f70541fe6f7f1f2d8a12390cefb522ec53c698ed5888432b0179ed12e6624a89b68b0f1c600c2aa568d18885b13ec8dd189a7d2c208' for transaction with id '3f8e0c25154a18d1abf114e2f63a0bd0e56f8a0114b6207381cd32c061452cd1'",
						"description": "Available only when result is -1."
					}
				}
			},
			"meta": {
				"type": "object",
				"properties": {}
			}
		}
	},
	"transactionEstimateFeesRequestBody": {
		"type": "object",
		"required": ["transaction"],
		"properties": {
			"transaction": {
				"type": "object",
				"description": "Transaction object.\n\n Note: The transaction object must contain the following properties: module, command, nonce, senderPublicKey and params.\nWhen estimating 'token:transferCrossChain' transactions do not include 'messageFee' and 'messageFeeTokenID' in the params.",
				"required": ["module", "command", "nonce", "senderPublicKey", "params"],
				"properties": {
					"id": {
						"type": "string",
						"example": "f9593f101c4acafc3ede650ab4c10fa2ecb59b225813eddbbb17b47e96932e9b",
						"description": "Unique identifier of the transaction."
					},
					"module": {
						"type": "string",
						"example": "token",
						"description": "Name of the blockchain module associated with the transaction."
					},
					"command": {
						"type": "string",
						"example": "transferCrossChain",
						"description": "Specific command name in the module to be executed."
					},
					"nonce": {
						"type": "string",
						"example": "0"
					},
					"fee": {
						"type": "string",
						"example": "1000000",
						"description": "Transaction fee."
					},
					"senderPublicKey": {
						"type": "string",
						"example": "a3f96c50d0446220ef2f98240898515cbba8155730679ca35326d98dcfb680f0",
						"description": "The public key is derived from the private key of the owner of the account.\nIt can be used to validate that the private key belongs to the owner, but not provide access to the owner's private key."
					},
					"signatures": {
						"type": "array",
						"description": "An array representing signature(s) of the transaction sender.",
						"items": {
							"type": "string"
						},
						"example": [
							"48425002226745847e155cf5480478c2336a43bb178439e9058cc2b50e26335cf7c8360b6c6a49793d7ae8d087bc746cab9618655e6a0adba4694cce2015b50f"
						]
					},
					"params": {
						"type": "object",
						"properties": {
							"recipientAddress": {
								"type": "string",
								"example": "lskz4upsnrwk75wmfurf6kbxsne2nkjqd3yzwdaup",
								"description": "The Lisk Address is the human-readable representation of a blockchain account.\nIt is a 41 characters long identifier that begins with `lsk`."
							},
							"receivingChainID": {
								"type": "string",
								"example": "00000001",
								"description": "Chain ID of the receiving chain."
							},
							"amount": {
								"type": "string",
								"example": "10000000000",
								"description": "Amount of tokens to be transferred in this transaction."
							},
							"tokenID": {
								"type": "string",
								"example": "0000000000000000",
								"description": "Unique token identifier."
							},
							"data": {
								"type": "string",
								"example": "Cross chain transfer tx",
								"description": "Transaction data."
							},
							"messageFee": {
								"type": "string",
								"example": "1000000",
								"description": "Fee to be used for transaction processing in the receiving chain."
							},
							"messageFeeTokenID": {
								"type": "string",
								"example": "0000000000000000",
								"description": "Token used for cross-chain message fee."
							}
						}
					}
				}
			}
		}
	},
	"txEstimateFeesWithEnvelope": {
		"type": "object",
		"required": ["data", "meta"],
		"properties": {
			"data": {
				"type": "object",
				"required": ["transaction"],
				"properties": {
					"transaction": {
						"type": "object",
						"required": ["fee"],
						"properties": {
							"fee": {
								"type": "object",
								"required": ["tokenID", "minimum"],
								"properties": {
									"tokenID": {
										"type": "string",
										"example": "0000000000000000",
										"description": "The universal token identifier for the token."
									},
									"minimum": {
										"type": "string",
										"example": "5000000",
										"description": "Minimum fee required for the transaction. This is the sum of the transaction byteFee and any other applicable additionalFee. The breakdown is available in the response meta."
									},
									"priority": {
										"type": "object",
										"required": ["low", "medium", "high"],
										"description": "Transaction fee recommendations by priority based on the dynamic fees algorithm.",
										"properties": {
											"low": {
												"type": "string",
												"description": "Estimated transaction fee with low priority.",
												"example": "135000"
											},
											"medium": {
												"type": "string",
												"description": "Estimated transaction fee with medium priority.",
												"example": "207000"
											},
											"high": {
												"type": "string",
												"description": "Estimated transaction fee with high priority.",
												"example": "405000"
											}
										}
									}
								}
							},
							"params": {
								"type": "object",
								"required": ["messageFee"],
								"properties": {
									"messageFee": {
										"type": "object",
										"required": ["tokenID", "amount"],
										"properties": {
											"tokenID": {
												"type": "string",
												"example": "0000000000000000",
												"description": "The universal token identifier for the token with which the cross-chain message fee is to be paid."
											},
											"amount": {
												"type": "string",
												"example": "5000000",
												"description": "Amount of tokens to be paid for cross-chain message fees."
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"meta": {
				"type": "object",
				"required": ["breakdown"],
				"properties": {
					"breakdown": {
						"type": "object",
						"required": ["fee"],
						"properties": {
							"fee": {
								"type": "object",
								"required": ["minimum"],
								"properties": {
									"minimum": {
										"type": "object",
										"required": ["byteFee"],
										"properties": {
											"byteFee": {
												"type": "string",
												"example": "135000",
												"description": "The byte fee for the transaction. This is the product of the transaction length times the fee per byte as configured in the application's 'fee' module."
											},
											"additionalFees": {
												"type": "object",
												"properties": {
													"validatorRegistrationFee": {
														"type": "string",
														"example": "1000000000",
														"description": "The extra fee to be supplied for a PoS Validator registration transaction."
													},
													"userAccountInitializationFee": {
														"type": "string",
														"example": "5000000",
														"description": "The extra fee to be supplied for initializing a new user token account."
													},
													"escrowAccountInitializationFee": {
														"type": "string",
														"example": "10000000",
														"description": "The extra fee to be supplied for initializing an escrow token account."
													},
													"chainRegistrationFee": {
														"type": "string",
														"example": "1000000000",
														"description": "The extra fee to be supplied for a chain registration transaction."
													},
													"bufferBytes": {
														"type": "string",
														"example": "6000",
														"description": "The extra fee to be supplied for buffer bytes."
													}
												}
											}
										}
									}
								}
							},
							"params": {
								"type": "object",
								"required": ["messageFee"],
								"properties": {
									"messageFee": {
										"type": "object",
										"required": ["ccmByteFee"],
										"properties": {
											"ccmByteFee": {
												"type": "string",
												"example": "135000",
												"description": "The byte fee for the ccm transaction. This is the product of the ccm buffer size times the message fee per byte as configured in the application's 'interoperability' module, available within the channel information."
											},
											"additionalFees": {
												"type": "object",
												"properties": {
													"userAccountInitializationFee": {
														"type": "string",
														"example": "5000000",
														"description": "The extra fee to be supplied for initializing a new user token account."
													},
													"bufferBytes": {
														"type": "string",
														"example": "6000",
														"description": "The extra fee to be supplied for buffer bytes."
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
