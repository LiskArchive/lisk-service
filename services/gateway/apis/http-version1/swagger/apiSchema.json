{
  "parameters": {
    "ip": {
      "name": "ip",
      "in": "query",
      "description": "IP of the node or delegate",
      "type": "string",
      "format": "ip"
    },
    "httpPort": {
      "name": "httpPort",
      "in": "query",
      "description": "Http port of the node or delegate",
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "maximum": 65535
    },
    "wsPort": {
      "name": "wsPort",
      "in": "query",
      "description": "Web socket port for the node or delegate",
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "maximum": 65535
    },
    "os": {
      "name": "os",
      "in": "query",
      "description": "OS of the node",
      "type": "string"
    },
    "version": {
      "name": "version",
      "in": "query",
      "description": "Lisk version of the node",
      "type": "string",
      "format": "version"
    },
    "state": {
      "name": "state",
      "in": "query",
      "description": "Current state of the network",
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "maximum": 2
    },
    "height": {
      "name": "height",
      "in": "query",
      "description": "Current height of the network",
      "type": "integer",
      "format": "int32",
      "minimum": 1
    },
    "broadhash": {
      "name": "broadhash",
      "in": "query",
      "description": "Broadhash of the network",
      "type": "string",
      "format": "hex"
    },
    "searchQuery": {
      "in": "query",
      "name": "q",
      "required": true,
      "description": "Search query",
      "type": "string"
    },
    "limit": {
      "in": "query",
      "name": "limit",
      "description": "Limit applied to results",
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "maximum": 100,
      "default": 10
    },
    "limit101": {
      "in": "query",
      "name": "limit",
      "description": "Limit applied to results",
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "maximum": 101,
      "default": 10
    },
    "offset": {
      "name": "offset",
      "in": "query",
      "description": "Offset value for results",
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "default": 0
    },
    "address": {
      "name": "address",
      "in": "query",
      "description": "Lisk account address",
      "type": "string",
      "format": "address",
      "minLength": 1,
      "maxLength": 22
    },
    "publickey": {
      "name": "publickey",
      "in": "query",
      "description": "Public key to query",
      "type": "string",
      "format": "publicKey",
      "minLength": 1
    },
    "secpubkey": {
      "name": "secpubkey",
      "in": "query",
      "description": "Second public key to query",
      "type": "string",
      "format": "publicKey",
      "minLength": 1
    },
    "username": {
      "name": "username",
      "in": "query",
      "description": "Delegate username to query",
      "type": "string",
      "format": "username",
      "minLength": 1,
      "maxLength": 20
    },
    "block": {
      "name": "block",
      "in": "query",
      "description": "Block id to query",
      "type": "string",
      "format": "id",
      "minLength": 1,
      "maxLength": 20
    },
    "blockIdPath": {
      "name": "block_id",
      "in": "path",
      "required": true,
      "description": "Block id to query",
      "type": "string",
      "format": "id",
      "minLength": 1,
      "maxLength": 20
    },
    "id": {
      "name": "id",
      "in": "query",
      "description": "Transaction id to query",
      "type": "string",
      "format": "id",
      "minLength": 1,
      "maxLength": 20,
      "pattern": "^\\d*$"
    },
    "transactionIdPath": {
      "name": "transaction_id",
      "in": "path",
      "required": true,
      "description": "Transaction id to query",
      "type": "string",
      "format": "id",
      "minLength": 1,
      "maxLength": 20,
      "pattern": "^\\d*$"
    },
    "accountAddressPublicKeyUsernameQuery": {
      "name": "address",
      "in": "query",
      "description": "Lisk address, public key or account name",
      "type": "string",
      "minLength": 1
    },
    "accountAddressPublicKeyUsernamePath": {
      "name": "account_id",
      "in": "path",
      "required": true,
      "description": "Lisk address, public key or account name",
      "type": "string",
      "minLength": 1
    },
    "recipient": {
      "name": "recipient",
      "in": "query",
      "description": "Lisk address, public key or account name (recipientId)",
      "type": "string",
      "minLength": 1
    },
    "sender": {
      "name": "sender",
      "in": "query",
      "description": "Lisk address, public key or account name (senderId)",
      "type": "string",
      "minLength": 1
    },
    "type": {
      "name": "type",
      "in": "query",
      "description": "Transaction type (0-12)",
      "type": "integer",
      "minimum": 0,
      "maximum": 12
    },
    "transactionData": {
      "name": "data",
      "in": "query",
      "description": "Search in transaction data field. Exact match, but can use % as wildcard e.g. data=test%",
      "type": "string",
      "minLength": 1
    },
    "min": {
      "name": "min",
      "in": "query",
      "description": "Minimum transaction amount in Beddows",
      "type": "integer",
      "minimum": 0
    },
    "max": {
      "name": "max",
      "in": "query",
      "description": "Maximum transaction amount in Beddows",
      "type": "integer",
      "minimum": 0
    },
    "from": {
      "name": "from",
      "in": "query",
      "description": "Starting UNIX timestamp",
      "type": "integer",
      "minimum": 0
    },
    "to": {
      "name": "to",
      "in": "query",
      "description": "Ending UNIX timestamp",
      "type": "integer",
      "minimum": 1
    },
    "storeName": {
      "name": "storeName",
      "in": "path",
      "description": "Name of the store container",
      "required": true,
      "type": "string"
    },
    "storeId": {
      "name": "storeId",
      "in": "path",
      "description": "Id of the object in the container",
      "required": true,
      "type": "string"
    },
    "marketDataProvider": {
      "name": "provider",
      "in": "path",
      "description": "Source of the news among different data providers (Poloniex, Bittrex, etc.)",
      "required": true,
      "type": "string",
      "enum": [
        "poloniex",
        "bittrex"
      ]
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "required": [
        "address"
      ],
      "properties": {
        "address": {
          "type": "string",
          "format": "address",
          "example": "4935562234363081651L",
          "description": "The Lisk Address is the human readable representation of the accounts owners' public key.\nIt consists of multiple numbers followed by a big 'L' at the end.\n"
        },
        "publicKey": {
          "type": "string",
          "format": "publicKey",
          "example": "968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b",
          "description": "The public key is derived from the private key of the owner of the account.\nIt can be used to validate that the private key belongs to the owner, but not provide access to the owners private key.\n"
        },
        "secondPublicKey": {
          "type": "string",
          "format": "publicKey",
          "example": "968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b",
          "description": "The second public key is derived from the second private key of an account, if the owner activated a second passphrase for her/his account.\n"
        },
        "balance": {
          "type": "string",
          "example": "4448642000"
        },
        "delegate": {
          "$ref": "#/definitions/DelegateSub"
        },
        "knowledge": {
          "type": "object",
          "properties": {
            "owner": {
              "type": "string",
              "example": "genesis_84"
            },
            "description": {
              "type": "string",
              "example": "Genesis wallet"
            }
          }
        },
        "multisignatureAccount": {
          "type": "object",
          "properties": {
            "lifetime": {
              "type": "integer",
              "example": 48
            },
            "minimalNumberAcccounts": {
              "type": "integer",
              "example": 2
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountBasic"
              }
            }
          }
        },
        "multisignatureMemberships": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "format": "address",
                "example": "4935562234363081651L",
                "description": "The Lisk Address is the human readable representation of the accounts owners' public key.\nIt consists of multiple numbers followed by a big 'L' at the end.\n"
              },
              "balance": {
                "type": "string",
                "example": "4448642000"
              },
              "lifetime": {
                "type": "integer",
                "example": 48
              },
              "min": {
                "type": "integer",
                "example": 2
              },
              "publicKey": {
                "type": "string",
                "format": "publicKey",
                "example": "968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b",
                "description": "The public key is derived from the private key of the owner of the account.\nIt can be used to validate that the private key belongs to the owner, but not provide access to the owners private key.\n"
              },
              "secondPublicKey": {
                "type": "string",
                "format": "publicKey",
                "example": "968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b",
                "description": "The second public key is derived from the second private key of an account, if the owner activated a second passphrase for her/his account.\n"
              }
            }
          }
        },
        "transactionCount": {
          "type": "object",
          "properties": {
            "incoming": {
              "type": "string",
              "example": "216"
            },
            "outgoing": {
              "type": "string",
              "example": "1581"
            }
          }
        },
        "unconfirmedMultisignatureMemberships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountBasic"
          }
        }
      }
    },
    "AccountBasic": {
      "type": "object",
      "required": [
        "address",
        "publicKey"
      ],
      "properties": {
        "address": {
          "type": "string",
          "format": "address",
          "example": "4935562234363081651L",
          "description": "The Lisk Address is the human readable representation of the accounts owners' public key.\nIt consists of multiple numbers followed by a big 'L' at the end.\n"
        },
        "publicKey": {
          "type": "string",
          "format": "publicKey",
          "example": "968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b",
          "description": "The public key is derived from the private key of the owner of the account.\nIt can be used to validate that the private key belongs to the owner, but not provide access to the owners private key.\n"
        },
        "secondPublicKey": {
          "type": "string",
          "format": "publicKey",
          "example": "968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b",
          "description": "The second public key is derived from the second private key of an account, if the owner activated a second passphrase for her/his account.\n"
        },
        "balance": {
          "type": "string",
          "example": "4448642000"
        },
        "unconfirmedSignature": {
          "type": "number",
          "example": 0
        }
      }
    },
    "Block": {
      "type": "object",
      "required": [
        "id",
        "height",
        "timestamp",
        "numberOfTransactions",
        "totalAmount",
        "totalFee",
        "reward",
        "totalForged"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "id",
          "minLength": 1,
          "maxLength": 20,
          "example": "6258354802676165798",
          "description": "Unique identifier of the block.\nDerived from the block signature.\n"
        },
        "height": {
          "type": "integer",
          "example": 8344448,
          "minimum": 1,
          "description": "Height of the network, when the block got forged.\nThe height of the networks represents the number of blocks,\nthat have been forged on the network since Genesis Block.\n"
        },
        "version": {
          "type": "integer",
          "example": 0,
          "minimum": 0,
          "description": "Versioning for future upgrades of the lisk protocol."
        },
        "timestamp": {
          "type": "integer",
          "example": 85944650,
          "description": "UNIX Timestamp"
        },
        "payloadLength": {
          "type": "integer",
          "example": 117,
          "minimum": 0,
          "description": "Bytesize of the payload hash."
        },
        "generatorAddress": {
          "type": "string",
          "example": "7749538982696555450L",
          "description": "Delegate address."
        },
        "generatorPublicKey": {
          "type": "string",
          "example": "6e904b2f678eb3b6c3042acb188a607d903d441d61508d047fe36b3c982995c8",
          "description": "Delegate public key."
        },
        "generatorUsername": {
          "type": "string",
          "example": "genesis_13",
          "description": "Delegate registered name."
        },
        "payloadHash": {
          "type": "string",
          "format": "hex",
          "example": "4e4d91be041e09a2e54bb7dd38f1f2a02ee7432ec9f169ba63cd1f193a733dd2",
          "description": "Hash of the payload of the block.\nThe payload of a block is comprised of the transactions the block contains.\nFor each type of transaction exists a different maximum size for the payload.\n"
        },
        "blockSignature": {
          "type": "string",
          "format": "signature",
          "example": "a3733254aad600fa787d6223002278c3400be5e8ed4763ae27f9a15b80e20c22ac9259dc926f4f4cabdf0e4f8cec49308fa8296d71c288f56b9d1e11dfe81e07",
          "description": "Derived from a SHA-256 hash of the block header,\nthat is signed by the private key of the delegate who forged the block.\n"
        },
        "confirmations": {
          "type": "integer",
          "example": 200,
          "description": "Number of times that this Block has been confirmed by the network.\nBy forging a new block on a chain, all former blocks in the chain get confirmed by the forging delegate.\n"
        },
        "previousBlockId": {
          "type": "string",
          "format": "id",
          "example": "15918760246746894806",
          "description": "The id of the previous block of the chain."
        },
        "numberOfTransactions": {
          "type": "integer",
          "example": 15,
          "description": "The number of transactions processed in the block."
        },
        "totalAmount": {
          "type": "string",
          "example": "150000000",
          "description": "The total amount of Lisk transferred."
        },
        "totalFee": {
          "type": "string",
          "example": "15000000",
          "description": "The total amount of fees associated with the block."
        },
        "reward": {
          "type": "string",
          "example": "50000000",
          "description": "The Lisk reward for the delegate."
        },
        "totalForged": {
          "type": "string",
          "example": "65000000",
          "description": "Total amount of LSK that have been forged in this Block.\nConsists of fees and the reward.\n"
        }
      }
    },
    "Delegate": {
      "type": "object",
      "required": [
        "address",
        "publicKey",
        "username"
      ],
      "properties": {
        "address": {
          "type": "string",
          "format": "address",
          "example": "4935562234363081651L",
          "description": "Lisk Address of the delegate who forged the block."
        },
        "approval": {
          "type": "string",
          "example": "35.77",
          "description": ""
        },
        "missedBlocks": {
          "type": "integer",
          "example": 157,
          "minimum": 1,
          "description": ""
        },
        "producedBlocks": {
          "type": "integer",
          "example": 55222,
          "minimum": 1,
          "description": ""
        },
        "productivity": {
          "type": "string",
          "example": "99.72",
          "description": ""
        },
        "publicKey": {
          "type": "string",
          "format": "publicKey",
          "example": "6122ac1fd71b437014ddbc4ec01e07879f5af1853536efaa0233bc12907c684b",
          "description": "Public key of th edelagte who forged the block."
        },
        "secondPublicKey": {
          "type": "string",
          "format": "publicKey",
          "example": "6122ac1fd71b437014ddbc4ec01e07879f5af1853536efaa0233bc12907c684b",
          "description": "Second public key of th edelagte who forged the block."
        },
        "rank": {
          "type": "integer",
          "example": 93,
          "minimum": 1,
          "description": ""
        },
        "rewards": {
          "type": "string",
          "example": "109000000000",
          "description": "Amount of rewards in LSK collected during forging"
        },
        "username": {
          "type": "string",
          "example": "genesis_84",
          "description": ""
        },
        "vote": {
          "type": "string",
          "example": "4630668157412954",
          "description": ""
        }
      }
    },
    "DelegateSub": {
      "type": "object",
      "required": [
        "username"
      ],
      "properties": {
        "approval": {
          "type": "string",
          "example": "35.77",
          "description": ""
        },
        "missedBlocks": {
          "type": "integer",
          "example": 157,
          "minimum": 1,
          "description": ""
        },
        "producedBlocks": {
          "type": "integer",
          "example": 55222,
          "minimum": 1,
          "description": ""
        },
        "productivity": {
          "type": "string",
          "example": "99.72",
          "description": ""
        },
        "rank": {
          "type": "integer",
          "example": 93,
          "minimum": 1,
          "description": ""
        },
        "rewards": {
          "type": "string",
          "example": "109000000000",
          "description": "Amount of rewards in LSK collected during forging"
        },
        "username": {
          "type": "string",
          "example": "genesis_84",
          "description": ""
        },
        "vote": {
          "type": "string",
          "example": "4630668157412954",
          "description": ""
        }
      }
    },
    "Transaction": {
      "type": "object",
      "required": [
        "id",
        "type",
        "amount",
        "fee",
        "senderPublicKey",
        "recipientId",
        "timestamp",
        "asset",
        "signature"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "id",
          "example": "222675625422353767",
          "minLength": 1,
          "maxLength": 20,
          "description": "Unique identifier of the transaction.\nDerived from the transaction signature.\n"
        },
        "amount": {
          "type": "string",
          "example": "150000000",
          "description": "Amount of Lisk to be transferred in this transaction.\n"
        },
        "fee": {
          "type": "string",
          "example": "1000000",
          "description": "Transaction fee associated with this transaction.\n"
        },
        "type": {
          "type": "integer",
          "minimum": 0,
          "maximum": 7,
          "description": "Describes the Transaction type.\n"
        },
        "height": {
          "type": "integer",
          "minimum": 1,
          "example": 8350681,
          "description": "The height of the network, at the moment where this transaction was included in the blockchain.\n"
        },
        "blockId": {
          "type": "string",
          "format": "id",
          "minLength": 1,
          "maxLength": 20,
          "example": "6258354802676165798",
          "description": "The Id of the block, this transaction is included in.\n"
        },
        "timestamp": {
          "type": "integer",
          "example": 28227090,
          "description": "Time when the transaction was created.\nUNIX Timestamp.\n"
        },
        "senderId": {
          "type": "string",
          "format": "address",
          "example": "4935562234363081651L",
          "description": "Lisk Address of the Senders' account.\n"
        },
        "senderPublicKey": {
          "type": "string",
          "format": "publicKey",
          "example": "2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079",
          "description": "The public key of the Senders' account.\n"
        },
        "senderSecondPublicKey": {
          "type": "string",
          "format": "publicKey",
          "example": "2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079",
          "description": "The second public key of the Senders' account, if it exists.\n"
        },
        "recipientId": {
          "type": "string",
          "format": "address",
          "example": "4935562234363081651L",
          "description": "Lisk Address of the Recipients' account.\n"
        },
        "recipientPublicKey": {
          "type": "string",
          "format": "publicKey",
          "example": "2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079",
          "description": "The public key of the Recipients' account.\n"
        },
        "signature": {
          "type": "string",
          "format": "signature",
          "example": "2821d93a742c4edf5fd960efad41a4def7bf0fd0f7c09869aed524f6f52bf9c97a617095e2c712bd28b4279078a29509b339ac55187854006591aa759784c205",
          "description": "Derived from a SHA-256 hash of the transaction object,\nthat is signed by the private key of the account who created the transaction.\n"
        },
        "signSignature": {
          "type": "string",
          "format": "signature",
          "example": "2821d93a742c4edf5fd960efad41a4def7bf0fd0f7c09869aed524f6f52bf9c97a617095e2c712bd28b4279078a29509b339ac55187854006591aa759784c205",
          "description": "Contains the second signature, if the transaction is sent from an account with second passphrase activated."
        },
        "signatures": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "signature",
            "example": "72c9b2aa734ec1b97549718ddf0d4737fd38a7f0fd105ea28486f2d989e9b3e399238d81a93aa45c27309d91ce604a5db9d25c9c90a138821f2011bc6636c60a",
            "description": "If the transaction is a multisignature transaction, all signatures of the members of the corresponding multisignature group will be listed here."
          }
        },
        "confirmations": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of times that this transaction has been confirmed by the network.\nBy forging a new block on a chain, all former blocks and their contained transactions in the chain get confirmed by the forging delegate.\n"
        },
        "asset": {
          "type": "object"
        },
        "receivedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the moment, where a node discovered a transaction for the first time."
        },
        "relays": {
          "type": "integer",
          "description": "Number of times, a single transaction object has been broadcasted to another peer."
        },
        "ready": {
          "type": "boolean",
          "example": false,
          "description": "Only present in transactions sent from a multisignature account, or transactions type 4 (multisignature registration).\nFalse, if the minimum amount of signatures to sign this transaction has not been reached yet.\nTrue, if the minimum amount of signatures has been reached.\n"
        }
      }
    },
    "TransactionExport": {
      "type": "object",
      "required": [
        "amount",
        "blockId",
        "date",
        "fee",
        "senderId",
        "senderPublicKey",
        "transactionId"
      ],
      "properties": {
        "amount": {
          "type": "string",
          "example": "150000000",
          "description": "Amount of Lisk to be transferred in this transaction.\n"
        },
        "blockId": {
          "type": "string",
          "format": "id",
          "minLength": 1,
          "maxLength": 20,
          "example": "6258354802676165798",
          "description": "The Id of the block, this transaction is included in.\n"
        },
        "date": {
          "type": "string",
          "example": "2020-02-18T21:00:23.000Z",
          "description": "Time when the transaction was created in ISO format.\n"
        },
        "fee": {
          "type": "string",
          "example": "0.1",
          "description": "Transaction fee associated with this transaction in LSK.\n"
        },
        "recipientId": {
          "type": "string",
          "format": "address",
          "example": "4935562234363081651L",
          "description": "Lisk Address of the Recipients' account.\n"
        },
        "senderId": {
          "type": "string",
          "format": "address",
          "example": "4935562234363081651L",
          "description": "Lisk Address of the Senders' account.\n"
        },
        "senderPublicKey": {
          "type": "string",
          "format": "publicKey",
          "example": "2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079",
          "description": "The public key of the Senders' account.\n"
        },
        "transactionId": {
          "type": "string",
          "format": "id",
          "example": "222675625422353767",
          "minLength": 1,
          "maxLength": 20,
          "description": "Unique identifier of the transaction.\nDerived from the transaction signature.\n"
        }
      }
    },
    "Peer": {
      "type": "object",
      "required": [
        "wsPort",
        "state"
      ],
      "properties": {
        "ip": {
          "type": "string",
          "example": "127.0.0.1",
          "format": "ip",
          "description": "IPv4 address of the peer node."
        },
        "httpPort": {
          "type": "integer",
          "example": 8000,
          "format": "int32",
          "minimum": 1,
          "maximum": 65535,
          "description": "The port the peer node uses for HTTP requests, e.g. API calls."
        },
        "wsPort": {
          "type": "integer",
          "example": 8001,
          "format": "int32",
          "minimum": 1,
          "maximum": 65535,
          "description": "The port the peer node uses for Websocket Connections, e.g. P2P broadcasts."
        },
        "os": {
          "type": "string",
          "example": "debian",
          "description": "The Operating System, that the peer node runs on."
        },
        "version": {
          "type": "string",
          "example": "v0.8.0",
          "format": "version",
          "description": "The version of Lisk Core that the peer node runs on."
        },
        "state": {
          "type": "integer",
          "example": 2,
          "format": "int32",
          "minimum": 0,
          "maximum": 2,
          "description": "The state of the Peer.\nAvailable values: Connected, Disconnected, Banned\n"
        },
        "height": {
          "type": "integer",
          "minimum": 1,
          "example": 8350681,
          "description": "Network height on the peer node.\nRepresents the current number of blocks in the chain on the peer node.\n"
        },
        "broadhash": {
          "type": "string",
          "example": "258974416d58533227c6a3da1b6333f0541b06c65b41e45cf31926847a3db1ea",
          "format": "hex",
          "description": "Broadhash on the peer node.\nBroadhash is established as an aggregated rolling hash of the past five blocks present in the database.\n"
        },
        "nonce": {
          "type": "string",
          "example": "sYHEDBKcScaAAAYg",
          "minLength": 1,
          "description": "Unique Identifier for the peer.\nRandom string.\n"
        },
        "location": {
          "$ref": "#/definitions/Location"
        }
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string",
          "example": "Berlin",
          "description": "Name of the city."
        },
        "countryCode": {
          "type": "string",
          "example": "DE",
          "description": "ISO 3166-1 country code."
        },
        "countryName": {
          "type": "string",
          "example": "Germany",
          "description": "Name of the country."
        },
        "hostname": {
          "type": "string",
          "example": "host.210.239.23.62.rev.coltfrance.com",
          "description": "Hostname associated with the node's IP."
        },
        "ip": {
          "type": "string",
          "example": "210.239.23.62",
          "description": "Node's IP address."
        },
        "latitude": {
          "type": "string",
          "example": "52.5073",
          "description": "Geolocation data (latitude)."
        },
        "longitude": {
          "type": "string",
          "example": "13.3643",
          "description": "Geolocation data (longitude)."
        },
        "regionCode": {
          "type": "string",
          "example": "BE",
          "description": "Code of the region."
        },
        "regionName": {
          "type": "string",
          "example": "Land Berlin",
          "description": "Name of the region."
        },
        "timeZone": {
          "type": "string",
          "example": "Europe/Berlin",
          "description": "Node's time zone."
        },
        "zipCode": {
          "type": "string",
          "example": "10785",
          "description": "Zip/Postal code."
        }
      }
    },
    "NetworkStatus": {
      "type": "object",
      "required": [
        "broadhash",
        "nethash",
        "height"
      ],
      "properties": {
        "broadhash": {
          "type": "string",
          "example": "258974416d58533227c6a3da1b6333f0541b06c65b41e45cf31926847a3db1ea",
          "minLength": 64,
          "maxLength": 64,
          "description": "Broadhash is established as an aggregated rolling hash of the past five blocks present in the database.\nBroadhash consensus serves a vital function for the Lisk network in order to prevent forks.\nIt ensures that a majority of available peers agree that it is acceptable to forge.\n"
        },
        "height": {
          "type": "integer",
          "example": 123,
          "minimum": 1,
          "description": "Current block height of the node.\nRepresents the current number of blocks in the chain on the node.\n"
        },
        "networkHeight": {
          "type": "integer",
          "example": 123,
          "description": "Current block height of the network.\nRepresents the current number of blocks in the chain on the network.\n"
        },
        "epoch": {
          "type": "string",
          "format": "date-time",
          "example": "2016-05-24T17:00:00.000Z",
          "description": "Timestamp of first block on the network."
        },
        "milestone": {
          "type": "string",
          "example": "500000000",
          "description": "The Reward, each forger will get for forging a block at the current slot.\nAfter a certain amount of slots, the reward will be reduced.\n"
        },
        "nethash": {
          "type": "string",
          "example": "ed14889723f24ecc54871d058d98ce91ff2f973192075c0155ba2b7b70ad2511",
          "description": "Describes the network.\nThe nethash describes e.g. the Mainnet or the Testnet, that the node is connecting to.\n"
        },
        "supply": {
          "type": "string",
          "example": "10575384500000000",
          "description": "Total supply of LSK in the network."
        },
        "reward": {
          "type": "string",
          "example": "500000000",
          "description": "The reward a delegate will get for forging a block.\nDepends on the slot height.\n"
        },
        "fees": {
          "$ref": "#/definitions/Fees"
        }
      }
    },
    "Fees": {
      "type": "object",
      "required": [
        "send",
        "vote",
        "secondSignature",
        "delegate",
        "multisignature",
        "dappRegistration",
        "dappWithdrawal",
        "dappDeposit"
      ],
      "properties": {
        "send": {
          "type": "string",
          "example": "10000000"
        },
        "vote": {
          "type": "string",
          "example": "100000000"
        },
        "secondSignature": {
          "type": "string",
          "example": "500000000"
        },
        "delegate": {
          "type": "string",
          "example": "2500000000"
        },
        "multisignature": {
          "type": "string",
          "example": "500000000"
        },
        "dappRegistration": {
          "type": "string",
          "example": "2500000000"
        },
        "dappWithdrawal": {
          "type": "string",
          "example": "10000000"
        },
        "dappDeposit": {
          "type": "string",
          "example": "10000000"
        }
      }
    },
    "AccountsWithEnvelope": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "description": "List of blocks",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        },
        "meta": {
          "$ref": "#/definitions/Pagination"
        },
        "links": {
          "type": "object"
        }
      }
    },
    "BlocksWithEnvelope": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "description": "List of blocks",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Block"
          }
        },
        "meta": {
          "$ref": "#/definitions/Pagination"
        },
        "links": {
          "type": "object"
        }
      }
    },
    "DelegatesWithEnvelope": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "description": "List of blocks",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Delegate"
          }
        },
        "meta": {
          "$ref": "#/definitions/Pagination"
        },
        "links": {
          "type": "object"
        }
      }
    },
    "PeersWithEnvelope": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "description": "List of blocks",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Peer"
          }
        },
        "meta": {
          "$ref": "#/definitions/Pagination"
        },
        "links": {
          "type": "object"
        }
      }
    },
    "TransactionsWithEnvelope": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "description": "List of blocks",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        },
        "meta": {
          "$ref": "#/definitions/Pagination"
        },
        "links": {
          "type": "object"
        }
      }
    },
    "TransactionsExportWithEnvelope": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "description": "List of blocks",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionExport"
          }
        },
        "meta": {
          "type": "object"
        },
        "links": {
          "type": "object"
        }
      }
    },
    "TransactionsStatisticsWithEnvelope": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/TransactionsStatistics"
        },
        "meta": {
          "$ref": "#/definitions/Pagination"
        },
        "links": {
          "type": "object"
        }
      }
    },
    "TransactionsStatistics": {
      "type": "object",
      "description": "Transactions statistics",
      "required": [
        "timeline",
        "distributionByType",
        "distributionByAmount"
      ],
      "properties": {
        "timeline": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "timestamp",
              "date",
              "transactionCount",
              "volume"
            ],
            "properties": {
              "timestamp": {
                "type": "integer",
                "description": "UNIX timestamp representing beginning of the aggregation interval",
                "example": 1556100060
              },
              "date": {
                "type": "string",
                "description": "Date representing beginning of the aggregation interval",
                "example": "2019-11-27"
              },
              "transactionCount": {
                "type": "integer",
                "description": "Count of all transactions in the given time span",
                "example": "14447177193385"
              },
              "volume": {
                "type": "string",
                "description": "Sum of all transaction amounts and fees sent in the given time span (in Beddows unit)",
                "example": "14447177193385"
              }
            }
          }
        },
        "distributionByType": {
          "type": "object",
          "description": "Count of transactions by transaction type in the whole time interval"
        },
        "distributionByAmount": {
          "type": "object",
          "description": "Count of transactions by amount range in the whole time interval"
        }
      }
    },
    "VotesWithEnvelope": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "description": "List of votes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vote"
          }
        },
        "meta": {
          "$ref": "#/definitions/Pagination"
        },
        "links": {
          "type": "object"
        }
      }
    },
    "Vote": {
      "type": "object",
      "required": [
        "address",
        "publicKey",
        "balance",
        "username"
      ],
      "properties": {
        "address": {
          "type": "string",
          "format": "address",
          "example": "4935562234363081651L",
          "description": "Lisk Address of the delegate the queried account voted for."
        },
        "publicKey": {
          "type": "string",
          "format": "publicKey",
          "example": "968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b",
          "description": "Public key of the delegate the queried account voted for."
        },
        "balance": {
          "type": "string",
          "example": 1081560729258,
          "description": "Balance of the delegate the queried account voted for."
        },
        "username": {
          "type": "string",
          "format": "username",
          "example": "liskhq",
          "description": "Username of the delegate the queried account voted for."
        }
      }
    },
    "Pagination": {
      "type": "object",
      "required": [
        "count",
        "offset"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "example": 100,
          "minimum": 0,
          "description": "Number of items returned in the request."
        },
        "offset": {
          "type": "integer",
          "example": 25,
          "minimum": 0,
          "description": "Defines how many items are skipped."
        },
        "total": {
          "type": "integer",
          "example": 43749,
          "minimum": 0,
          "description": "Total number of items in the database."
        }
      }
    },
    "NetworkStatistics": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "type": "object",
          "description": "Number of items returned in the request.",
          "properties": {
            "basic": {
              "type": "object",
              "description": "Total number of items in the database.",
              "properties": {
                "connectedPeers": {
                  "type": "integer",
                  "description": "Number of connected peers",
                  "example": 134
                },
                "disconnectedPeers": {
                  "type": "integer",
                  "description": "Number of disconnected peers",
                  "example": 48
                },
                "totalPeers": {
                  "type": "integer",
                  "description": "Total number of peers",
                  "example": 181
                }
              }
            },
            "height": {
              "type": "object",
              "description": "Number of nodes on the given height.",
              "properties": {
                "7982598": {
                  "type": "integer",
                  "example": 24
                }
              }
            },
            "coreVer": {
              "type": "object",
              "description": "Number of nodes on the given Lisk Core versions.",
              "properties": {
                "1.4.0": {
                  "type": "integer",
                  "example": 12
                },
                "1.5.0": {
                  "type": "integer",
                  "example": 41
                }
              }
            },
            "os": {
              "type": "object",
              "description": "Number of nodes using a given operating system.",
              "properties": {
                "linux3.10": {
                  "type": "integer",
                  "example": 33
                },
                "linux4.4": {
                  "type": "integer",
                  "example": 71
                }
              }
            }
          }
        },
        "meta": {
          "type": "object",
          "description": "Defines how many items are skipped."
        },
        "links": {
          "type": "object",
          "description": "Total number of items in the database."
        }
      }
    },
    "NewsWithEnvelope": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "description": "List of news from the NewsFeed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/News"
          }
        },
        "meta": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "example": 100,
              "minimum": 0,
              "description": "Number of items returned in the request."
            }
          }
        },
        "links": {
          "type": "object"
        }
      }
    },
    "News": {
      "type": "object",
      "required": [
        "content",
        "source"
      ],
      "properties": {
        "content": {
          "type": "string",
          "example": "We are switching to a monthly #LiskDevUpdate format. We do so to continue providing detailed insight into our #dev… https://t.co/aq0Lo4PFxN",
          "description": "Post content provided by the chosen blog.\n"
        },
        "source": {
          "type": "string",
          "example": "twitter",
          "description": "Source of the given post.\n"
        },
        "sourceId": {
          "type": "string",
          "example": 1115973370200383500,
          "description": "Internal ID coming from the blog platform. For a Tweet it will be a TweetID generated by Twitter backend.\n"
        },
        "timestamp": {
          "type": "number",
          "example": 1554903759000
        },
        "url": {
          "type": "string",
          "example": "https://t.co/hfTXMoaCLK",
          "description": "URL of the original post.\n"
        },
        "author": {
          "type": "string",
          "example": "LiskHQ",
          "description": "author of the original post.\n"
        }
      }
    },
    "MarketPriceWithEnvelope": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "description": "List of news from the NewsFeed",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "BTC_LSK"
              },
              "from": {
                "type": "string",
                "example": "BTC"
              },
              "to": {
                "type": "string",
                "example": "LSK"
              },
              "rate": {
                "type": "string",
                "example": "0.00034450"
              },
              "updateTimestamp": {
                "type": "integer",
                "description": "timestamp",
                "example": 1556100060
              }
            }
          }
        },
        "meta": {
          "type": "object",
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            }
          }
        },
        "links": {
          "type": "object"
        }
      }
    },
    "MarketOrdersWithEnvelope": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "description": "List of news from the NewsFeed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketOrder"
          }
        },
        "meta": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "example": 100,
              "minimum": 0,
              "description": "Number of items returned in the request."
            },
            "total": {
              "type": "integer",
              "example": 43749,
              "minimum": 0,
              "description": "Total number of items in the database."
            },
            "source": {
              "type": "string",
              "description": "Exchange as a source of the data",
              "example": "poloniex"
            }
          }
        },
        "links": {
          "type": "object"
        }
      }
    },
    "MarketOrder": {
      "type": "object",
      "required": [
        "amount",
        "price"
      ],
      "properties": {
        "amount": {
          "type": "string",
          "description": "Amount of the order",
          "example": "4.65031371"
        },
        "ask": {
          "type": "string",
          "description": "Ask",
          "example": "0.00035990"
        },
        "bid": {
          "type": "string",
          "description": "Bid",
          "example": "0.00034069"
        },
        "price": {
          "type": "string",
          "description": "Price",
          "example": "13342.10279190"
        }
      }
    },
    "MarketCandlesWithEnvelope": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "description": "List of news from the NewsFeed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketCandle"
          }
        },
        "meta": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "example": 100,
              "minimum": 0,
              "description": "Number of items returned in the request."
            },
            "total": {
              "type": "integer",
              "example": 43749,
              "minimum": 0,
              "description": "Total number of items in the database."
            },
            "source": {
              "type": "string",
              "description": "Exchange as a source of the data",
              "example": "poloniex"
            },
            "timeframe": {
              "type": "string",
              "description": "Beginning of the timespan of provided data",
              "enum": [
                "day",
                "hour",
                "minute"
              ]
            },
            "fromTimestamp": {
              "type": "integer",
              "description": "Beginning of the timespan of provided data",
              "example": 85944650
            },
            "toTimestamp": {
              "type": "integer",
              "description": "End of the timespan of provided data",
              "example": 85944650
            }
          }
        },
        "links": {
          "type": "object"
        }
      }
    },
    "MarketCandle": {
      "type": "object",
      "required": [
        "close",
        "firstTrade",
        "high",
        "lastTrade",
        "liskVolume",
        "low",
        "nextEnd",
        "open",
        "timestamp"
      ],
      "properties": {
        "btcVolume": {
          "type": "string",
          "description": "btcVolume",
          "example": "0.00040651"
        },
        "close": {
          "type": "string",
          "description": "close",
          "example": "0.00034196"
        },
        "firstTrade": {
          "type": "integer",
          "description": "firstTrade",
          "example": 5885514
        },
        "high": {
          "type": "string",
          "description": "high",
          "example": "0.00034196"
        },
        "lastTrade": {
          "type": "integer",
          "description": "lastTrade",
          "example": 5885514
        },
        "liskVolume": {
          "type": "string",
          "description": "liskVolume",
          "example": "1.18877666"
        },
        "low": {
          "type": "string",
          "description": "low",
          "example": "0.00034196"
        },
        "nextEnd": {
          "type": "integer",
          "description": "nextEnd",
          "example": 1556100085
        },
        "numTrades": {
          "type": "integer",
          "description": "numTrades",
          "example": 1
        },
        "open": {
          "type": "string",
          "description": "open",
          "example": "0.00034196"
        },
        "timestamp": {
          "type": "integer",
          "description": "timestamp",
          "example": 1556100060
        }
      }
    },
    "MarketStatisticsWithEnvelope": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "type": "object",
          "description": "List of values from a given excahnge",
          "properties": {
            "btcVolume": {
              "type": "string",
              "description": "Volume in Bitcoin",
              "example": "4.65031371"
            },
            "high": {
              "type": "string",
              "description": "The biggest price",
              "example": "0.00035990"
            },
            "last": {
              "type": "string",
              "description": "Price by last order",
              "example": "0.00034069"
            },
            "liskVolume": {
              "type": "string",
              "description": "Volume in Lisk",
              "example": "13342.10279190"
            },
            "low": {
              "type": "string",
              "description": "The lowest price",
              "example": "0.00034018"
            },
            "tradesCount": {
              "type": "string",
              "description": "Number of trades",
              "example": "505"
            }
          }
        },
        "meta": {
          "type": "object",
          "description": "Response metadata",
          "properties": {
            "count": {
              "type": "integer",
              "example": 100,
              "minimum": 0,
              "description": "Number of items returned in the request."
            },
            "total": {
              "type": "integer",
              "example": 43749,
              "minimum": 0,
              "description": "Total number of items in the database."
            },
            "source": {
              "type": "string",
              "description": "Exchange as a source of the data",
              "example": "poloniex"
            },
            "fromTimestamp": {
              "type": "integer",
              "description": "Beginning of the timespan of provided data",
              "example": 85944650
            },
            "toTimestamp": {
              "type": "integer",
              "description": "End of the timespan of provided data",
              "example": 85944650
            }
          }
        },
        "links": {
          "type": "object"
        }
      }
    },
    "UnifiedSearch": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "score": {
                "type": "number",
                "example": 0.82,
                "description": "Search result score on the scale 0.0 - the worst, 1.0 - best"
              },
              "description": {
                "type": "string",
                "example": "genesis_10"
              },
              "id": {
                "type": "string",
                "example": "1864409191503661202L"
              },
              "type": {
                "type": "string",
                "example": "address"
              }
            }
          }
        },
        "meta": {
          "type": "object"
        },
        "links": {
          "type": "object"
        }
      }
    },
    "StorageData": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "example": "4935562234363081651L",
              "description": "ID of received item - same as storeId"
            },
            "value": {
              "type": "string",
              "example": ""
            },
            "extend": {
              "type": "object"
            }
          }
        },
        "meta": {
          "type": "object",
          "properties": {
            "dataLength": {
              "type": "string",
              "example": 2745,
              "description": "Data length in bytes"
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "explorer": {
              "type": "string",
              "example": "https://explorer.lisk.io/address/4935562234363081651L"
            }
          }
        }
      }
    },
    "FeatureNotImplemented": {
      "type": "object",
      "required": [
        "data",
        "meta",
        "links"
      ],
      "properties": {
        "data": {
          "type": "object"
        },
        "meta": {
          "type": "object"
        },
        "links": {
          "type": "object"
        }
      }
    },
    "AccountsResponseOk": {
      "type": "object",
      "required": [
        "200"
      ],
      "properties": {
        "200": {
          "description": "array of accounts with details",
            "type": "array",
            "items": {
              "$ref": "#/definitions/AccountsWithEnvelope"
          }
        }
      }
    }
  },
  "responses": {
    "badParameter": {
      "description": "Bad input parameter"
    },
    "notFound": {
      "description": "Not found"
    }
  }
}