def echoBanner(msg) {
	echo '----------------------------------------------------------------------'
	echo msg
	echo '----------------------------------------------------------------------'
}

pipeline {
	agent { node { label 'lisk-service' } }
	options {
		timeout(time: 10, unit: 'MINUTES')
	}
	stages {
		stage ('Build dependencies') {
			steps {
				script { echoBanner(STAGE_NAME) }
				nvm(readFile('.nvmrc').trim()) {
					dir('./') { sh 'npm i -g yarn' }
					dir('./') { sh 'yarn install --frozen-lockfile' }
					dir('./framework') { sh 'yarn install --frozen-lockfile' }
					dir('./services/blockchain-app-registry') { sh 'yarn install --frozen-lockfile' }
					dir('./services/blockchain-connector') { sh 'yarn install --frozen-lockfile' }
					dir('./services/blockchain-indexer') { sh 'yarn install --frozen-lockfile' }
					dir('./services/blockchain-coordinator') { sh 'yarn install --frozen-lockfile' }
					dir('./services/fee-estimator') { sh 'yarn install --frozen-lockfile' }
					dir('./services/market') { sh 'yarn install --frozen-lockfile' }
					dir('./services/export') { sh 'yarn install --frozen-lockfile' }
					dir('./services/gateway') { sh 'yarn install --frozen-lockfile' }
					dir('./services/template') { sh 'yarn install --frozen-lockfile' }
					dir('./services/transaction-statistics') { sh 'yarn install --frozen-lockfile' }
					dir('./tests') { sh 'yarn install --frozen-lockfile' }
				}
			}
		}
		stage ('Check linting') {
			steps {
				script { echoBanner(STAGE_NAME) }
				nvm(readFile('.nvmrc').trim()) {
					sh 'yarn run eslint'
				}
			}
		}
		stage('Perform unit tests') {
			steps {
				script { echoBanner(STAGE_NAME) }
				nvm(readFile('.nvmrc').trim()) {
					dir('./framework') { sh "yarn run test:unit" }
					dir('./services/blockchain-app-registry') { sh "yarn run test:unit" }
					dir('./services/blockchain-connector') { sh "yarn run test:unit" }
					dir('./services/blockchain-indexer') { sh "yarn run test:unit" }
					dir('./services/fee-estimator') { sh "yarn run test:unit" }
					dir('./services/market') { sh "yarn run test:unit" }
					dir('./services/export') { sh "yarn run test:unit" }
					dir('./services/gateway') { sh "yarn run test:unit" }
				}
			}
		}
	}
	post {
		failure {
			script { echoBanner('Failed to run the pipeline') }
		}
		cleanup {
			script { 
				echoBanner('Cleaning up...') 
				nvm(readFile('.nvmrc').trim()) {
					echoBanner('Removing dependencies') 
					sh 'make clean-local'
				}
			}
		}
	}
}
// vim: filetype=groovy
