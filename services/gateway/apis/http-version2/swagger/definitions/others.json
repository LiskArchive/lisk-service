{
    "AccountBasic": {
        "type": "object",
        "required": [
            "address",
            "publicKey"
        ],
        "properties": {
            "address": {
                "type": "string",
                "format": "address",
                "example": "4935562234363081651L",
                "description": "The Lisk Address is the human readable representation of the accounts owners' public key.\nIt consists of multiple numbers followed by a capital 'L' at the end.\n"
            },
            "publicKey": {
                "type": "string",
                "format": "publicKey",
                "example": "968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b",
                "description": "The public key is derived from the private key of the owner of the account.\nIt can be used to validate that the private key belongs to the owner, but not provide access to the owners private key.\n"
            },
            "secondPublicKey": {
                "type": "string",
                "format": "publicKey",
                "example": "968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b",
                "description": "The second public key is derived from the second private key of an account, if the owner activated a second passphrase for her/his account.\n"
            },
            "balance": {
                "type": "string",
                "example": "4448642000"
            },
            "unconfirmedSignature": {
                "type": "number",
                "example": 0
            }
        }
    },
    "TransactionExport": {
        "type": "object",
        "required": [
            "amount",
            "blockId",
            "date",
            "fee",
            "senderId",
            "senderPublicKey",
            "transactionId"
        ],
        "properties": {
            "amount": {
                "type": "string",
                "example": "150000000",
                "description": "Amount of Lisk to be transferred in this transaction.\n"
            },
            "blockId": {
                "type": "string",
                "format": "id",
                "minLength": 1,
                "maxLength": 20,
                "example": "6258354802676165798",
                "description": "The Id of the block that this transaction is included in.\n"
            },
            "date": {
                "type": "string",
                "example": "2020-02-18T21:00:23.000Z",
                "description": "Time when the transaction was created in ISO format.\n"
            },
            "fee": {
                "type": "string",
                "example": "0.1",
                "description": "Transaction fee associated with this transaction in LSK.\n"
            },
            "recipientId": {
                "type": "string",
                "format": "address",
                "example": "4935562234363081651L",
                "description": "Lisk Address of the Recipients' account.\n"
            },
            "senderId": {
                "type": "string",
                "format": "address",
                "example": "4935562234363081651L",
                "description": "Lisk Address of the Senders' account.\n"
            },
            "senderPublicKey": {
                "type": "string",
                "format": "publicKey",
                "example": "2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079",
                "description": "The public key of the Senders' account.\n"
            },
            "transactionId": {
                "type": "string",
                "format": "id",
                "example": "222675625422353767",
                "minLength": 1,
                "maxLength": 20,
                "description": "Unique identifier of the transaction.\nDerived from the transaction signature.\n"
            }
        }
    },
    "Fees": {
        "type": "object",
        "required": [
            "send",
            "vote",
            "secondSignature",
            "delegate",
            "multisignature",
            "dappRegistration",
            "dappWithdrawal",
            "dappDeposit"
        ],
        "properties": {
            "send": {
                "type": "string",
                "example": "10000000"
            },
            "vote": {
                "type": "string",
                "example": "100000000"
            },
            "secondSignature": {
                "type": "string",
                "example": "500000000"
            },
            "delegate": {
                "type": "string",
                "example": "2500000000"
            },
            "multisignature": {
                "type": "string",
                "example": "500000000"
            },
            "dappRegistration": {
                "type": "string",
                "example": "2500000000"
            },
            "dappWithdrawal": {
                "type": "string",
                "example": "10000000"
            },
            "dappDeposit": {
                "type": "string",
                "example": "10000000"
            }
        }
    },
    "TransactionsExportWithEnvelope": {
        "type": "object",
        "required": [
            "data",
            "meta",
            "links"
        ],
        "properties": {
            "data": {
                "description": "List of blocks",
                "type": "array",
                "items": {
                    "$ref": "#/definitions/TransactionExport"
                }
            },
            "meta": {
                "type": "object"
            },
            "links": {
                "type": "object"
            }
        }
    },
    "NewsWithEnvelope": {
        "type": "object",
        "required": [
            "data",
            "meta",
            "links"
        ],
        "properties": {
            "data": {
                "description": "List of news from the NewsFeed",
                "type": "array",
                "items": {
                    "$ref": "#/definitions/News"
                }
            },
            "meta": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 100,
                        "minimum": 0,
                        "description": "Number of items returned in the request."
                    }
                }
            },
            "links": {
                "type": "object"
            }
        }
    },
    "News": {
        "type": "object",
        "required": [
            "content",
            "source"
        ],
        "properties": {
            "content": {
                "type": "string",
                "example": "We are switching to a monthly #LiskDevUpdate format. We do so to continue providing detailed insight into our #devâ€¦ https://t.co/aq0Lo4PFxN",
                "description": "Post content provided by the chosen blog.\n"
            },
            "source": {
                "type": "string",
                "example": "twitter",
                "description": "Source of the given post.\n"
            },
            "sourceId": {
                "type": "string",
                "example": 1115973370200383500,
                "description": "Internal ID coming from the blog platform. For a Tweet it will be a TweetID generated by Twitter backend.\n"
            },
            "timestamp": {
                "type": "number",
                "example": 1554903759000
            },
            "url": {
                "type": "string",
                "example": "https://t.co/hfTXMoaCLK",
                "description": "URL of the original post.\n"
            },
            "author": {
                "type": "string",
                "example": "LiskHQ",
                "description": "author of the original post.\n"
            }
        }
    },
    "MarketPriceWithEnvelope": {
        "type": "object",
        "required": [
            "data",
            "meta",
            "links"
        ],
        "properties": {
            "data": {
                "description": "List of news from the NewsFeed",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "string",
                            "example": "BTC_LSK"
                        },
                        "from": {
                            "type": "string",
                            "example": "BTC"
                        },
                        "to": {
                            "type": "string",
                            "example": "LSK"
                        },
                        "rate": {
                            "type": "string",
                            "example": "0.00034450"
                        },
                        "updateTimestamp": {
                            "type": "integer",
                            "description": "timestamp",
                            "example": 1556100060
                        }
                    }
                }
            },
            "meta": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "number",
                        "example": 1
                    }
                }
            },
            "links": {
                "type": "object"
            }
        }
    },
    "MarketOrdersWithEnvelope": {
        "type": "object",
        "required": [
            "data",
            "meta",
            "links"
        ],
        "properties": {
            "data": {
                "description": "List of news from the NewsFeed",
                "type": "array",
                "items": {
                    "$ref": "#/definitions/MarketOrder"
                }
            },
            "meta": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 100,
                        "minimum": 0,
                        "description": "Number of items returned in the request."
                    },
                    "total": {
                        "type": "integer",
                        "example": 43749,
                        "minimum": 0,
                        "description": "Total number of items in the database."
                    },
                    "source": {
                        "type": "string",
                        "description": "Exchange as a source of the data",
                        "example": "poloniex"
                    }
                }
            },
            "links": {
                "type": "object"
            }
        }
    },
    "MarketOrder": {
        "type": "object",
        "required": [
            "amount",
            "price"
        ],
        "properties": {
            "amount": {
                "type": "string",
                "description": "Amount of the order",
                "example": "4.65031371"
            },
            "ask": {
                "type": "string",
                "description": "Ask",
                "example": "0.00035990"
            },
            "bid": {
                "type": "string",
                "description": "Bid",
                "example": "0.00034069"
            },
            "price": {
                "type": "string",
                "description": "Price",
                "example": "13342.10279190"
            }
        }
    },
    "MarketCandlesWithEnvelope": {
        "type": "object",
        "required": [
            "data",
            "meta",
            "links"
        ],
        "properties": {
            "data": {
                "description": "List of news from the NewsFeed",
                "type": "array",
                "items": {
                    "$ref": "#/definitions/MarketCandle"
                }
            },
            "meta": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 100,
                        "minimum": 0,
                        "description": "Number of items returned in the request."
                    },
                    "total": {
                        "type": "integer",
                        "example": 43749,
                        "minimum": 0,
                        "description": "Total number of items in the database."
                    },
                    "source": {
                        "type": "string",
                        "description": "Exchange as a source of the data",
                        "example": "poloniex"
                    },
                    "timeframe": {
                        "type": "string",
                        "description": "Beginning of the timespan of provided data",
                        "enum": [
                            "day",
                            "hour",
                            "minute"
                        ]
                    },
                    "fromTimestamp": {
                        "type": "integer",
                        "description": "Beginning of the timespan of provided data",
                        "example": 85944650
                    },
                    "toTimestamp": {
                        "type": "integer",
                        "description": "End of the timespan of provided data",
                        "example": 85944650
                    }
                }
            },
            "links": {
                "type": "object"
            }
        }
    },
    "MarketCandle": {
        "type": "object",
        "required": [
            "close",
            "firstTrade",
            "high",
            "lastTrade",
            "liskVolume",
            "low",
            "nextEnd",
            "open",
            "timestamp"
        ],
        "properties": {
            "btcVolume": {
                "type": "string",
                "description": "btcVolume",
                "example": "0.00040651"
            },
            "close": {
                "type": "string",
                "description": "close",
                "example": "0.00034196"
            },
            "firstTrade": {
                "type": "integer",
                "description": "firstTrade",
                "example": 5885514
            },
            "high": {
                "type": "string",
                "description": "high",
                "example": "0.00034196"
            },
            "lastTrade": {
                "type": "integer",
                "description": "lastTrade",
                "example": 5885514
            },
            "liskVolume": {
                "type": "string",
                "description": "liskVolume",
                "example": "1.18877666"
            },
            "low": {
                "type": "string",
                "description": "low",
                "example": "0.00034196"
            },
            "nextEnd": {
                "type": "integer",
                "description": "nextEnd",
                "example": 1556100085
            },
            "numTrades": {
                "type": "integer",
                "description": "numTrades",
                "example": 1
            },
            "open": {
                "type": "string",
                "description": "open",
                "example": "0.00034196"
            },
            "timestamp": {
                "type": "integer",
                "description": "timestamp",
                "example": 1556100060
            }
        }
    },
    "MarketStatisticsWithEnvelope": {
        "type": "object",
        "required": [
            "data",
            "meta",
            "links"
        ],
        "properties": {
            "data": {
                "type": "object",
                "description": "List of values from a given exchange",
                "properties": {
                    "btcVolume": {
                        "type": "string",
                        "description": "Volume in Bitcoin",
                        "example": "4.65031371"
                    },
                    "high": {
                        "type": "string",
                        "description": "The highest price",
                        "example": "0.00035990"
                    },
                    "last": {
                        "type": "string",
                        "description": "Price by last order",
                        "example": "0.00034069"
                    },
                    "liskVolume": {
                        "type": "string",
                        "description": "Volume in Lisk",
                        "example": "13342.10279190"
                    },
                    "low": {
                        "type": "string",
                        "description": "The lowest price",
                        "example": "0.00034018"
                    },
                    "tradesCount": {
                        "type": "string",
                        "description": "Number of trades",
                        "example": "505"
                    }
                }
            },
            "meta": {
                "type": "object",
                "description": "Response metadata",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 100,
                        "minimum": 0,
                        "description": "Number of items returned in the request."
                    },
                    "total": {
                        "type": "integer",
                        "example": 43749,
                        "minimum": 0,
                        "description": "Total number of items in the database."
                    },
                    "source": {
                        "type": "string",
                        "description": "Exchange as a source of the data",
                        "example": "poloniex"
                    },
                    "fromTimestamp": {
                        "type": "integer",
                        "description": "Beginning of the timespan of provided data",
                        "example": 85944650
                    },
                    "toTimestamp": {
                        "type": "integer",
                        "description": "End of the timespan of provided data",
                        "example": 85944650
                    }
                }
            },
            "links": {
                "type": "object"
            }
        }
    },
    "StorageData": {
        "type": "object",
        "properties": {
            "data": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "example": "4935562234363081651L",
                        "description": "ID of received item - same as storeId"
                    },
                    "value": {
                        "type": "string",
                        "example": ""
                    },
                    "extend": {
                        "type": "object"
                    }
                }
            },
            "meta": {
                "type": "object",
                "properties": {
                    "dataLength": {
                        "type": "string",
                        "example": 2745,
                        "description": "Data length in bytes"
                    }
                }
            },
            "links": {
                "type": "object",
                "properties": {
                    "explorer": {
                        "type": "string",
                        "example": "https://explorer.lisk.io/address/4935562234363081651L"
                    }
                }
            }
        }
    },
    "FeatureNotImplemented": {
        "type": "object",
        "required": [
            "data",
            "meta",
            "links"
        ],
        "properties": {
            "data": {
                "type": "object"
            },
            "meta": {
                "type": "object"
            },
            "links": {
                "type": "object"
            }
        }
    }
}